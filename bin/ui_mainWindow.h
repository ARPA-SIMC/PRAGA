/********************************************************************************
** Form generated from reading UI file 'mainWindow.ui'
**
** Created by: Qt User Interface Compiler version 6.4.2
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_MAINWINDOW_H
#define UI_MAINWINDOW_H

#include <QtCore/QDate>
#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QDateEdit>
#include <QtWidgets/QFormLayout>
#include <QtWidgets/QGroupBox>
#include <QtWidgets/QHBoxLayout>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QPlainTextEdit>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QSlider>
#include <QtWidgets/QSpinBox>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QVBoxLayout>
#include <QtWidgets/QWidget>

QT_BEGIN_NAMESPACE

class Ui_MainWindow
{
public:
    QAction *actionSettingsMapOpenStreetMap;
    QAction *actionSettingsMapEsriSatellite;
    QAction *actionSettingsMapStamenTerrain;
    QAction *actionMeteopointRectangleSelection;
    QAction *actionMeteopointQualitySpatial;
    QAction *actionInterpolationDem;
    QAction *actionInterpolationSettings;
    QAction *actionSettingsParameters;
    QAction *actionTopographicDistanceMapsSave;
    QAction *actionTopographicDistanceMapsLoad;
    QAction *actionAnomaly;
    QAction *actionClimate;
    QAction *actionShowPointsHide;
    QAction *actionShowPointsCurrent;
    QAction *actionShowPointsElab;
    QAction *actionShowPointsAnomalyAbs;
    QAction *actionShowPointsAnomalyPerc;
    QAction *actionShowPointsClimate;
    QAction *actionShowGridHide;
    QAction *actionShowGridLocation;
    QAction *actionShowGridCurrent;
    QAction *actionShowGridElab;
    QAction *actionShowGridAnomalyAbs;
    QAction *actionShowGridAnomalyPerc;
    QAction *actionShowGridClimate;
    QAction *actionShowPointsLocation;
    QAction *actionFileOpenProject;
    QAction *actionFileCloseProject;
    QAction *actionFileSaveProjectAs;
    QAction *actionFileSaveProject;
    QAction *actionRadiationSettings;
    QAction *actionInterpolationMeteogridCurrentTime;
    QAction *actionInterpolationMeteogridPeriod;
    QAction *actionInterpolationMeteogridSaveCurrentData;
    QAction *actionFileNetCDF_Open;
    QAction *actionNetCDF_Close;
    QAction *actionNetCDF_ShowMetadata;
    QAction *actionFileMeteogridOpen;
    QAction *actionFileMeteogridClose;
    QAction *actionFileMeteogridExportNetcdf;
    QAction *actionFileMeteopointOpen;
    QAction *actionFileMeteopointClose;
    QAction *actionFileMeteopointArkimetDownload;
    QAction *actionFileMeteopointNewArkimet;
    QAction *actionSettingsMapGoogleMap;
    QAction *actionSettingsMapGoogleSatellite;
    QAction *actionSettingsMapGoogleTerrain;
    QAction *actionSettingsMapGoogleHybrid;
    QAction *actionMeteopointDataCount;
    QAction *actionMeteogridMissingData;
    QAction *actionImport_data_XML_grid;
    QAction *actionFileMeteopointNewCsv;
    QAction *actionFileMeteopointProperties_import;
    QAction *actionFileMeteopointData_XMLimport;
    QAction *actionAll_active;
    QAction *actionSelected_active;
    QAction *actionFrom_point_list_active;
    QAction *actionWith_Criteria_active;
    QAction *actionRandom_subset_active;
    QAction *actionAll_notActive;
    QAction *actionSelected_notActive;
    QAction *actionWith_NO_DATA_notActive;
    QAction *actionWith_Criteria_notActive;
    QAction *actionDeletePoint_selected;
    QAction *actionDeletePoint_notSelected;
    QAction *actionDeletePoint_notActive;
    QAction *actionDeleteData_Active;
    QAction *actionDeleteData_notActive;
    QAction *actionDeleteData_selected;
    QAction *actionView_not_active_points;
    QAction *action_Proxy_graph;
    QAction *actionNewMeteoGrid;
    QAction *actionFileMeteogridExportRaster;
    QAction *actionFileMeteopointArkimetUpdatePointProperties;
    QAction *actionFileMeteopointArkimetUpdateMeteopoints;
    QAction *actionFileMeteopointArkimetUpdateDatasets;
    QAction *actionPointStyleCircle;
    QAction *actionPointStyleText;
    QAction *actionPointStyleText_multicolor;
    QAction *actionMark_from_pointlist;
    QAction *actionUnmark_all_points;
    QAction *actionSpatialAggregationOpenDB;
    QAction *actionSpatialAggregationNewDB;
    QAction *actionSpatialAggregationFromGrid;
    QAction *actionExport_MeteoPoints_toCsv;
    QAction *actionFileDemOpen;
    QAction *actionFileExportInterpolation;
    QAction *flagMeteoGrid_Fixed_color_scale;
    QAction *flagMeteoGrid_Dynamic_color_scale;
    QAction *actionFileMeteogridDelete;
    QAction *actionMeteoGrid_Reverse_color_scale;
    QAction *actioFileMeteogrid_Load_current_data;
    QAction *actionMeteoGrid_Set_color_scale;
    QAction *actionShiftDataAll;
    QAction *actionShiftDataSelected;
    QAction *actionMeteoGridActiveAll;
    QAction *actionMeteoGridActiveWith_DEM;
    QAction *actionFileMeteogridPlanGriddingPeriod;
    QAction *actionInterpolationMeteogridGriddingTaskAdd;
    QAction *actionInterpolationMeteogridGriddingTaskRemove;
    QAction *actionDemRestore;
    QAction *actionSearchPointName;
    QAction *actionSearchPointId;
    QAction *actionMeteoPointsClear_selection;
    QAction *actionShow_InfoProject;
    QAction *actionCompute_daily_from_Hourly_all;
    QAction *actionCompute_daily_from_Hourly_selected;
    QAction *actionCompute_monthly_data_from_daily;
    QAction *actionNetcdf_ColorScale_SetType;
    QAction *actionNetcdf_ColorScale_Reverse;
    QAction *actionNetcdf_ColorScale_Fixed;
    QAction *actionNetcdf_ColorScale_RangeVariable;
    QAction *actionShowNetcdfHide;
    QAction *actionShowNetcdfLocation;
    QAction *actionShowNetcdfVariable;
    QAction *actionClimateMeteoPoints;
    QAction *actionClimateMeteoGrid;
    QAction *actionStatistical_Summary;
    QAction *actionDemRangeFixed;
    QAction *actionDemRangeDynamic;
    QAction *actionExport_MeteoGrid_toCsv;
    QAction *actionOpenShell;
    QAction *actionView_output_points;
    QAction *actionFileOutputPointsOpen;
    QAction *actionFileOutputPointsClose;
    QAction *actionFileOutputPoints_NewFromCsv;
    QAction *actionInterpolationOutputPointsCurrentTime;
    QAction *actionInterpolationOutputPointsPeriod;
    QAction *actionCompute_drought;
    QAction *actionFileMeteogrid_ExportDailyData;
    QAction *actionFileMeteopointData_XMLexport;
    QAction *actionFileMeteogridData_XMLexport;
    QAction *actionWaterTable_importLocation;
    QAction *actionWaterTable_importDepth;
    QAction *actionWaterTable_computeSingleWell;
    QAction *actionWaterTable_computeAllWells;
    QAction *actionWaterTable_showLocation;
    QAction *actionWaterTable_showParameters;
    QAction *actionWaterTable_showDepth;
    QAction *actionWaterTable_Hide;
    QAction *actionWaterTable_showId;
    QAction *actionSpatialAggregationAssignAltitude;
    QAction *actionInterpolationTopographicIndex;
    QAction *actionShowPointsCVResidual;
    QAction *actionInterpolationCVCurrentTime;
    QAction *actionInterpolationCVPeriod;
    QAction *actionSpatialAggregationFromGrid_hourly;
    QAction *actionInterpolationWriteGlocalWeightMaps;
    QAction *actionHide_supplemental_stations;
    QAction *actionFileLoadInterpolation;
    QAction *actionDemZoom_to_layer;
    QAction *actionElaboration_Daily_data;
    QAction *actionElaboration_Hourly_data;
    QAction *actionShowInfo;
    QAction *actionMark_macro_area_stations;
    QAction *actionAll_Selected;
    QAction *actionNone_Selected;
    QAction *actionFrom_point_list_Selected;
    QAction *actionWith_Criteria_Selected;
    QAction *actionFileMeteopointArkimetLoadVM;
    QAction *actionLoad_stations_file;
    QAction *actionLoad_macro_areas_file;
    QAction *actionInterpolationGlocalCreateWeightMaps;
    QAction *actionInterpolationGlocalSelectZoneMap;
    QAction *actionInterpolationGlocalSelectStationLists;
    QWidget *centralWidget;
    QHBoxLayout *horizontalLayout;
    QWidget *widget;
    QVBoxLayout *verticalLayout;
    QGroupBox *groupBoxVariable;
    QLabel *labelVariable;
    QLabel *labelFrequency;
    QDateEdit *dateEdit;
    QPushButton *frequencyButton;
    QPushButton *variableButton;
    QSpinBox *timeEdit;
    QPushButton *dayBeforeButton;
    QPushButton *dayAfterButton;
    QGroupBox *groupBoxMeteoPoints;
    QWidget *widgetColorLegendPoints;
    QGroupBox *groupBoxMeteoGrid;
    QWidget *widgetColorLegendGrid;
    QSlider *meteoGridOpacitySlider;
    QLabel *labelMeteoGridScale;
    QGroupBox *groupBoxRaster;
    QSlider *rasterOpacitySlider;
    QWidget *widgetColorLegendRaster;
    QLabel *labelRasterScale;
    QGroupBox *groupBoxNetcdf;
    QWidget *widgetColorLegendNetcdf;
    QSlider *netcdfOpacitySlider;
    QPushButton *netCDFButtonVariable;
    QLabel *labelNetcdfVariable;
    QGroupBox *groupBoxCV;
    QPlainTextEdit *textEditCV;
    QGroupBox *groupBoxElaboration;
    QFormLayout *formLayout;
    QLabel *label_elab1;
    QLineEdit *lineEditElab1;
    QLabel *label_elab2;
    QLineEdit *lineEditElab2;
    QLabel *label_variable;
    QLineEdit *lineEditVariable;
    QLabel *label_period;
    QLineEdit *lineEditPeriod;
    QLabel *label_offset;
    QLineEdit *lineEditOffset;
    QWidget *widgetMap;
    QMenuBar *menuBar;
    QMenu *menuFile;
    QMenu *menuFileNetCDF;
    QMenu *menuColor_Scale;
    QMenu *menuNetcdf_ColorScale_Range;
    QMenu *menuMeteogrid;
    QMenu *menuExport;
    QMenu *menuFileMeteopoint;
    QMenu *menuFileMeteopointNew;
    QMenu *menuImport;
    QMenu *menuArkimet;
    QMenu *menuOpen_DEM;
    QMenu *menuSet_range;
    QMenu *menuProject;
    QMenu *menuFileOutputPoints;
    QMenu *menuMacro_areas_file;
    QMenu *menuMeteopoint;
    QMenu *menuActive_points;
    QMenu *menuDeactive_points;
    QMenu *menuDelete_data;
    QMenu *menuDelete_points;
    QMenu *menuMark_points;
    QMenu *menuShift_data;
    QMenu *menuSearch_points;
    QMenu *menuCompute_daily_data_from_hourly;
    QMenu *menuSelected_points;
    QMenu *menuSettings;
    QMenu *menuSettingsMap;
    QMenu *menuInterpolation;
    QMenu *menuTopographicDistanceMaps;
    QMenu *menuInterpolationMeteogrid;
    QMenu *menuInterpolationMeteogridGriddingTask;
    QMenu *menuInterpolation_to_output_points;
    QMenu *menuInterpolationCV;
    QMenu *menuGlocal;
    QMenu *menuElaboration;
    QMenu *menuElaborationElab;
    QMenu *menuCompute_elaboration;
    QMenu *menuClimate;
    QMenu *menuClimate_fields;
    QMenu *menuSpatialAggregation;
    QMenu *menuShow;
    QMenu *menuShowPoints;
    QMenu *menuShowPointsAnomaly;
    QMenu *menustyle;
    QMenu *menuShowGrid;
    QMenu *menuShowGridAnomaly;
    QMenu *menuNetCDF;
    QMenu *menuRadiation;
    QMenu *menuMeteoGrid;
    QMenu *menuColor_scale;
    QMenu *menuRange;
    QMenu *menuActive_cells;
    QMenu *menuWaterTable;
    QMenu *menuWaterTableData;
    QMenu *menuWaterTableCompute;
    QMenu *menuWaterTableShow;
    QStatusBar *statusBar;

    void setupUi(QMainWindow *MainWindow)
    {
        if (MainWindow->objectName().isEmpty())
            MainWindow->setObjectName("MainWindow");
        MainWindow->setEnabled(true);
        MainWindow->resize(1276, 920);
        QPalette palette;
        QBrush brush(QColor(255, 255, 255, 255));
        brush.setStyle(Qt::SolidPattern);
        palette.setBrush(QPalette::Active, QPalette::Button, brush);
        palette.setBrush(QPalette::Active, QPalette::Midlight, brush);
        QBrush brush1(QColor(127, 127, 127, 255));
        brush1.setStyle(Qt::SolidPattern);
        palette.setBrush(QPalette::Active, QPalette::Dark, brush1);
        QBrush brush2(QColor(170, 170, 170, 255));
        brush2.setStyle(Qt::SolidPattern);
        palette.setBrush(QPalette::Active, QPalette::Mid, brush2);
        palette.setBrush(QPalette::Active, QPalette::Window, brush);
        QBrush brush3(QColor(0, 0, 0, 255));
        brush3.setStyle(Qt::SolidPattern);
        palette.setBrush(QPalette::Active, QPalette::Shadow, brush3);
        palette.setBrush(QPalette::Active, QPalette::AlternateBase, brush);
        QBrush brush4(QColor(0, 0, 0, 128));
        brush4.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette.setBrush(QPalette::Active, QPalette::PlaceholderText, brush4);
#endif
        palette.setBrush(QPalette::Inactive, QPalette::Button, brush);
        palette.setBrush(QPalette::Inactive, QPalette::Midlight, brush);
        palette.setBrush(QPalette::Inactive, QPalette::Dark, brush1);
        palette.setBrush(QPalette::Inactive, QPalette::Mid, brush2);
        palette.setBrush(QPalette::Inactive, QPalette::Window, brush);
        palette.setBrush(QPalette::Inactive, QPalette::Shadow, brush3);
        palette.setBrush(QPalette::Inactive, QPalette::AlternateBase, brush);
        QBrush brush5(QColor(0, 0, 0, 128));
        brush5.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette.setBrush(QPalette::Inactive, QPalette::PlaceholderText, brush5);
#endif
        palette.setBrush(QPalette::Disabled, QPalette::Button, brush);
        palette.setBrush(QPalette::Disabled, QPalette::Midlight, brush);
        palette.setBrush(QPalette::Disabled, QPalette::Dark, brush1);
        palette.setBrush(QPalette::Disabled, QPalette::Mid, brush2);
        palette.setBrush(QPalette::Disabled, QPalette::Window, brush);
        palette.setBrush(QPalette::Disabled, QPalette::Shadow, brush3);
        palette.setBrush(QPalette::Disabled, QPalette::AlternateBase, brush);
        QBrush brush6(QColor(0, 0, 0, 128));
        brush6.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette.setBrush(QPalette::Disabled, QPalette::PlaceholderText, brush6);
#endif
        MainWindow->setPalette(palette);
        QFont font;
        font.setPointSize(10);
        font.setBold(false);
        MainWindow->setFont(font);
        MainWindow->setMouseTracking(false);
        MainWindow->setAutoFillBackground(false);
        MainWindow->setAnimated(false);
        actionSettingsMapOpenStreetMap = new QAction(MainWindow);
        actionSettingsMapOpenStreetMap->setObjectName("actionSettingsMapOpenStreetMap");
        actionSettingsMapOpenStreetMap->setCheckable(true);
        actionSettingsMapEsriSatellite = new QAction(MainWindow);
        actionSettingsMapEsriSatellite->setObjectName("actionSettingsMapEsriSatellite");
        actionSettingsMapEsriSatellite->setCheckable(true);
        actionSettingsMapStamenTerrain = new QAction(MainWindow);
        actionSettingsMapStamenTerrain->setObjectName("actionSettingsMapStamenTerrain");
        actionSettingsMapStamenTerrain->setCheckable(true);
        actionSettingsMapStamenTerrain->setChecked(false);
        actionMeteopointRectangleSelection = new QAction(MainWindow);
        actionMeteopointRectangleSelection->setObjectName("actionMeteopointRectangleSelection");
        actionMeteopointRectangleSelection->setCheckable(true);
        actionMeteopointRectangleSelection->setEnabled(false);
        actionMeteopointQualitySpatial = new QAction(MainWindow);
        actionMeteopointQualitySpatial->setObjectName("actionMeteopointQualitySpatial");
        actionMeteopointQualitySpatial->setCheckable(true);
        actionMeteopointQualitySpatial->setChecked(true);
        actionInterpolationDem = new QAction(MainWindow);
        actionInterpolationDem->setObjectName("actionInterpolationDem");
        actionInterpolationSettings = new QAction(MainWindow);
        actionInterpolationSettings->setObjectName("actionInterpolationSettings");
        actionSettingsParameters = new QAction(MainWindow);
        actionSettingsParameters->setObjectName("actionSettingsParameters");
        actionTopographicDistanceMapsSave = new QAction(MainWindow);
        actionTopographicDistanceMapsSave->setObjectName("actionTopographicDistanceMapsSave");
        actionTopographicDistanceMapsLoad = new QAction(MainWindow);
        actionTopographicDistanceMapsLoad->setObjectName("actionTopographicDistanceMapsLoad");
        actionAnomaly = new QAction(MainWindow);
        actionAnomaly->setObjectName("actionAnomaly");
        actionClimate = new QAction(MainWindow);
        actionClimate->setObjectName("actionClimate");
        actionShowPointsHide = new QAction(MainWindow);
        actionShowPointsHide->setObjectName("actionShowPointsHide");
        actionShowPointsHide->setCheckable(true);
        actionShowPointsHide->setEnabled(true);
        actionShowPointsCurrent = new QAction(MainWindow);
        actionShowPointsCurrent->setObjectName("actionShowPointsCurrent");
        actionShowPointsCurrent->setCheckable(true);
        actionShowPointsElab = new QAction(MainWindow);
        actionShowPointsElab->setObjectName("actionShowPointsElab");
        actionShowPointsElab->setCheckable(true);
        actionShowPointsAnomalyAbs = new QAction(MainWindow);
        actionShowPointsAnomalyAbs->setObjectName("actionShowPointsAnomalyAbs");
        actionShowPointsAnomalyAbs->setCheckable(true);
        actionShowPointsAnomalyPerc = new QAction(MainWindow);
        actionShowPointsAnomalyPerc->setObjectName("actionShowPointsAnomalyPerc");
        actionShowPointsAnomalyPerc->setCheckable(true);
        actionShowPointsClimate = new QAction(MainWindow);
        actionShowPointsClimate->setObjectName("actionShowPointsClimate");
        actionShowPointsClimate->setCheckable(true);
        actionShowGridHide = new QAction(MainWindow);
        actionShowGridHide->setObjectName("actionShowGridHide");
        actionShowGridHide->setCheckable(true);
        actionShowGridLocation = new QAction(MainWindow);
        actionShowGridLocation->setObjectName("actionShowGridLocation");
        actionShowGridLocation->setCheckable(true);
        actionShowGridCurrent = new QAction(MainWindow);
        actionShowGridCurrent->setObjectName("actionShowGridCurrent");
        actionShowGridCurrent->setCheckable(true);
        actionShowGridElab = new QAction(MainWindow);
        actionShowGridElab->setObjectName("actionShowGridElab");
        actionShowGridElab->setCheckable(true);
        actionShowGridAnomalyAbs = new QAction(MainWindow);
        actionShowGridAnomalyAbs->setObjectName("actionShowGridAnomalyAbs");
        actionShowGridAnomalyAbs->setCheckable(true);
        actionShowGridAnomalyPerc = new QAction(MainWindow);
        actionShowGridAnomalyPerc->setObjectName("actionShowGridAnomalyPerc");
        actionShowGridAnomalyPerc->setCheckable(true);
        actionShowGridClimate = new QAction(MainWindow);
        actionShowGridClimate->setObjectName("actionShowGridClimate");
        actionShowGridClimate->setCheckable(true);
        actionShowPointsLocation = new QAction(MainWindow);
        actionShowPointsLocation->setObjectName("actionShowPointsLocation");
        actionShowPointsLocation->setCheckable(true);
        actionFileOpenProject = new QAction(MainWindow);
        actionFileOpenProject->setObjectName("actionFileOpenProject");
        actionFileCloseProject = new QAction(MainWindow);
        actionFileCloseProject->setObjectName("actionFileCloseProject");
        actionFileSaveProjectAs = new QAction(MainWindow);
        actionFileSaveProjectAs->setObjectName("actionFileSaveProjectAs");
        actionFileSaveProject = new QAction(MainWindow);
        actionFileSaveProject->setObjectName("actionFileSaveProject");
        actionFileSaveProject->setEnabled(false);
        actionRadiationSettings = new QAction(MainWindow);
        actionRadiationSettings->setObjectName("actionRadiationSettings");
        actionInterpolationMeteogridCurrentTime = new QAction(MainWindow);
        actionInterpolationMeteogridCurrentTime->setObjectName("actionInterpolationMeteogridCurrentTime");
        actionInterpolationMeteogridPeriod = new QAction(MainWindow);
        actionInterpolationMeteogridPeriod->setObjectName("actionInterpolationMeteogridPeriod");
        actionInterpolationMeteogridSaveCurrentData = new QAction(MainWindow);
        actionInterpolationMeteogridSaveCurrentData->setObjectName("actionInterpolationMeteogridSaveCurrentData");
        actionFileNetCDF_Open = new QAction(MainWindow);
        actionFileNetCDF_Open->setObjectName("actionFileNetCDF_Open");
        actionNetCDF_Close = new QAction(MainWindow);
        actionNetCDF_Close->setObjectName("actionNetCDF_Close");
        actionNetCDF_ShowMetadata = new QAction(MainWindow);
        actionNetCDF_ShowMetadata->setObjectName("actionNetCDF_ShowMetadata");
        actionFileMeteogridOpen = new QAction(MainWindow);
        actionFileMeteogridOpen->setObjectName("actionFileMeteogridOpen");
        actionFileMeteogridClose = new QAction(MainWindow);
        actionFileMeteogridClose->setObjectName("actionFileMeteogridClose");
        actionFileMeteogridExportNetcdf = new QAction(MainWindow);
        actionFileMeteogridExportNetcdf->setObjectName("actionFileMeteogridExportNetcdf");
        actionFileMeteopointOpen = new QAction(MainWindow);
        actionFileMeteopointOpen->setObjectName("actionFileMeteopointOpen");
        actionFileMeteopointClose = new QAction(MainWindow);
        actionFileMeteopointClose->setObjectName("actionFileMeteopointClose");
        actionFileMeteopointArkimetDownload = new QAction(MainWindow);
        actionFileMeteopointArkimetDownload->setObjectName("actionFileMeteopointArkimetDownload");
        actionFileMeteopointNewArkimet = new QAction(MainWindow);
        actionFileMeteopointNewArkimet->setObjectName("actionFileMeteopointNewArkimet");
        actionSettingsMapGoogleMap = new QAction(MainWindow);
        actionSettingsMapGoogleMap->setObjectName("actionSettingsMapGoogleMap");
        actionSettingsMapGoogleMap->setCheckable(true);
        actionSettingsMapGoogleSatellite = new QAction(MainWindow);
        actionSettingsMapGoogleSatellite->setObjectName("actionSettingsMapGoogleSatellite");
        actionSettingsMapGoogleSatellite->setCheckable(true);
        actionSettingsMapGoogleTerrain = new QAction(MainWindow);
        actionSettingsMapGoogleTerrain->setObjectName("actionSettingsMapGoogleTerrain");
        actionSettingsMapGoogleTerrain->setCheckable(true);
        actionSettingsMapGoogleHybrid = new QAction(MainWindow);
        actionSettingsMapGoogleHybrid->setObjectName("actionSettingsMapGoogleHybrid");
        actionSettingsMapGoogleHybrid->setCheckable(true);
        actionMeteopointDataCount = new QAction(MainWindow);
        actionMeteopointDataCount->setObjectName("actionMeteopointDataCount");
        actionMeteopointDataCount->setEnabled(false);
        actionMeteogridMissingData = new QAction(MainWindow);
        actionMeteogridMissingData->setObjectName("actionMeteogridMissingData");
        actionImport_data_XML_grid = new QAction(MainWindow);
        actionImport_data_XML_grid->setObjectName("actionImport_data_XML_grid");
        actionFileMeteopointNewCsv = new QAction(MainWindow);
        actionFileMeteopointNewCsv->setObjectName("actionFileMeteopointNewCsv");
        actionFileMeteopointProperties_import = new QAction(MainWindow);
        actionFileMeteopointProperties_import->setObjectName("actionFileMeteopointProperties_import");
        actionFileMeteopointData_XMLimport = new QAction(MainWindow);
        actionFileMeteopointData_XMLimport->setObjectName("actionFileMeteopointData_XMLimport");
        actionAll_active = new QAction(MainWindow);
        actionAll_active->setObjectName("actionAll_active");
        actionSelected_active = new QAction(MainWindow);
        actionSelected_active->setObjectName("actionSelected_active");
        actionFrom_point_list_active = new QAction(MainWindow);
        actionFrom_point_list_active->setObjectName("actionFrom_point_list_active");
        actionWith_Criteria_active = new QAction(MainWindow);
        actionWith_Criteria_active->setObjectName("actionWith_Criteria_active");
        actionRandom_subset_active = new QAction(MainWindow);
        actionRandom_subset_active->setObjectName("actionRandom_subset_active");
        actionAll_notActive = new QAction(MainWindow);
        actionAll_notActive->setObjectName("actionAll_notActive");
        actionSelected_notActive = new QAction(MainWindow);
        actionSelected_notActive->setObjectName("actionSelected_notActive");
        actionWith_NO_DATA_notActive = new QAction(MainWindow);
        actionWith_NO_DATA_notActive->setObjectName("actionWith_NO_DATA_notActive");
        actionWith_Criteria_notActive = new QAction(MainWindow);
        actionWith_Criteria_notActive->setObjectName("actionWith_Criteria_notActive");
        actionDeletePoint_selected = new QAction(MainWindow);
        actionDeletePoint_selected->setObjectName("actionDeletePoint_selected");
        actionDeletePoint_notSelected = new QAction(MainWindow);
        actionDeletePoint_notSelected->setObjectName("actionDeletePoint_notSelected");
        actionDeletePoint_notActive = new QAction(MainWindow);
        actionDeletePoint_notActive->setObjectName("actionDeletePoint_notActive");
        actionDeletePoint_notActive->setEnabled(true);
        actionDeleteData_Active = new QAction(MainWindow);
        actionDeleteData_Active->setObjectName("actionDeleteData_Active");
        actionDeleteData_notActive = new QAction(MainWindow);
        actionDeleteData_notActive->setObjectName("actionDeleteData_notActive");
        actionDeleteData_selected = new QAction(MainWindow);
        actionDeleteData_selected->setObjectName("actionDeleteData_selected");
        actionView_not_active_points = new QAction(MainWindow);
        actionView_not_active_points->setObjectName("actionView_not_active_points");
        actionView_not_active_points->setCheckable(true);
        action_Proxy_graph = new QAction(MainWindow);
        action_Proxy_graph->setObjectName("action_Proxy_graph");
        actionNewMeteoGrid = new QAction(MainWindow);
        actionNewMeteoGrid->setObjectName("actionNewMeteoGrid");
        actionFileMeteogridExportRaster = new QAction(MainWindow);
        actionFileMeteogridExportRaster->setObjectName("actionFileMeteogridExportRaster");
        actionFileMeteopointArkimetUpdatePointProperties = new QAction(MainWindow);
        actionFileMeteopointArkimetUpdatePointProperties->setObjectName("actionFileMeteopointArkimetUpdatePointProperties");
        actionFileMeteopointArkimetUpdateMeteopoints = new QAction(MainWindow);
        actionFileMeteopointArkimetUpdateMeteopoints->setObjectName("actionFileMeteopointArkimetUpdateMeteopoints");
        actionFileMeteopointArkimetUpdateDatasets = new QAction(MainWindow);
        actionFileMeteopointArkimetUpdateDatasets->setObjectName("actionFileMeteopointArkimetUpdateDatasets");
        actionPointStyleCircle = new QAction(MainWindow);
        actionPointStyleCircle->setObjectName("actionPointStyleCircle");
        actionPointStyleCircle->setCheckable(true);
        actionPointStyleCircle->setChecked(true);
        actionPointStyleText = new QAction(MainWindow);
        actionPointStyleText->setObjectName("actionPointStyleText");
        actionPointStyleText->setCheckable(true);
        actionPointStyleText_multicolor = new QAction(MainWindow);
        actionPointStyleText_multicolor->setObjectName("actionPointStyleText_multicolor");
        actionPointStyleText_multicolor->setCheckable(true);
        actionMark_from_pointlist = new QAction(MainWindow);
        actionMark_from_pointlist->setObjectName("actionMark_from_pointlist");
        actionUnmark_all_points = new QAction(MainWindow);
        actionUnmark_all_points->setObjectName("actionUnmark_all_points");
        actionSpatialAggregationOpenDB = new QAction(MainWindow);
        actionSpatialAggregationOpenDB->setObjectName("actionSpatialAggregationOpenDB");
        actionSpatialAggregationNewDB = new QAction(MainWindow);
        actionSpatialAggregationNewDB->setObjectName("actionSpatialAggregationNewDB");
        actionSpatialAggregationFromGrid = new QAction(MainWindow);
        actionSpatialAggregationFromGrid->setObjectName("actionSpatialAggregationFromGrid");
        actionExport_MeteoPoints_toCsv = new QAction(MainWindow);
        actionExport_MeteoPoints_toCsv->setObjectName("actionExport_MeteoPoints_toCsv");
        actionFileDemOpen = new QAction(MainWindow);
        actionFileDemOpen->setObjectName("actionFileDemOpen");
        actionFileExportInterpolation = new QAction(MainWindow);
        actionFileExportInterpolation->setObjectName("actionFileExportInterpolation");
        flagMeteoGrid_Fixed_color_scale = new QAction(MainWindow);
        flagMeteoGrid_Fixed_color_scale->setObjectName("flagMeteoGrid_Fixed_color_scale");
        flagMeteoGrid_Fixed_color_scale->setCheckable(true);
        flagMeteoGrid_Dynamic_color_scale = new QAction(MainWindow);
        flagMeteoGrid_Dynamic_color_scale->setObjectName("flagMeteoGrid_Dynamic_color_scale");
        flagMeteoGrid_Dynamic_color_scale->setCheckable(true);
        flagMeteoGrid_Dynamic_color_scale->setChecked(true);
        actionFileMeteogridDelete = new QAction(MainWindow);
        actionFileMeteogridDelete->setObjectName("actionFileMeteogridDelete");
        actionMeteoGrid_Reverse_color_scale = new QAction(MainWindow);
        actionMeteoGrid_Reverse_color_scale->setObjectName("actionMeteoGrid_Reverse_color_scale");
        actioFileMeteogrid_Load_current_data = new QAction(MainWindow);
        actioFileMeteogrid_Load_current_data->setObjectName("actioFileMeteogrid_Load_current_data");
        actionMeteoGrid_Set_color_scale = new QAction(MainWindow);
        actionMeteoGrid_Set_color_scale->setObjectName("actionMeteoGrid_Set_color_scale");
        actionShiftDataAll = new QAction(MainWindow);
        actionShiftDataAll->setObjectName("actionShiftDataAll");
        actionShiftDataSelected = new QAction(MainWindow);
        actionShiftDataSelected->setObjectName("actionShiftDataSelected");
        actionMeteoGridActiveAll = new QAction(MainWindow);
        actionMeteoGridActiveAll->setObjectName("actionMeteoGridActiveAll");
        actionMeteoGridActiveWith_DEM = new QAction(MainWindow);
        actionMeteoGridActiveWith_DEM->setObjectName("actionMeteoGridActiveWith_DEM");
        actionFileMeteogridPlanGriddingPeriod = new QAction(MainWindow);
        actionFileMeteogridPlanGriddingPeriod->setObjectName("actionFileMeteogridPlanGriddingPeriod");
        actionInterpolationMeteogridGriddingTaskAdd = new QAction(MainWindow);
        actionInterpolationMeteogridGriddingTaskAdd->setObjectName("actionInterpolationMeteogridGriddingTaskAdd");
        actionInterpolationMeteogridGriddingTaskRemove = new QAction(MainWindow);
        actionInterpolationMeteogridGriddingTaskRemove->setObjectName("actionInterpolationMeteogridGriddingTaskRemove");
        actionDemRestore = new QAction(MainWindow);
        actionDemRestore->setObjectName("actionDemRestore");
        actionSearchPointName = new QAction(MainWindow);
        actionSearchPointName->setObjectName("actionSearchPointName");
        actionSearchPointId = new QAction(MainWindow);
        actionSearchPointId->setObjectName("actionSearchPointId");
        actionMeteoPointsClear_selection = new QAction(MainWindow);
        actionMeteoPointsClear_selection->setObjectName("actionMeteoPointsClear_selection");
        actionMeteoPointsClear_selection->setEnabled(false);
        actionShow_InfoProject = new QAction(MainWindow);
        actionShow_InfoProject->setObjectName("actionShow_InfoProject");
        actionCompute_daily_from_Hourly_all = new QAction(MainWindow);
        actionCompute_daily_from_Hourly_all->setObjectName("actionCompute_daily_from_Hourly_all");
        actionCompute_daily_from_Hourly_selected = new QAction(MainWindow);
        actionCompute_daily_from_Hourly_selected->setObjectName("actionCompute_daily_from_Hourly_selected");
        actionCompute_monthly_data_from_daily = new QAction(MainWindow);
        actionCompute_monthly_data_from_daily->setObjectName("actionCompute_monthly_data_from_daily");
        actionCompute_monthly_data_from_daily->setEnabled(false);
        actionNetcdf_ColorScale_SetType = new QAction(MainWindow);
        actionNetcdf_ColorScale_SetType->setObjectName("actionNetcdf_ColorScale_SetType");
        actionNetcdf_ColorScale_Reverse = new QAction(MainWindow);
        actionNetcdf_ColorScale_Reverse->setObjectName("actionNetcdf_ColorScale_Reverse");
        actionNetcdf_ColorScale_Fixed = new QAction(MainWindow);
        actionNetcdf_ColorScale_Fixed->setObjectName("actionNetcdf_ColorScale_Fixed");
        actionNetcdf_ColorScale_Fixed->setCheckable(true);
        actionNetcdf_ColorScale_RangeVariable = new QAction(MainWindow);
        actionNetcdf_ColorScale_RangeVariable->setObjectName("actionNetcdf_ColorScale_RangeVariable");
        actionNetcdf_ColorScale_RangeVariable->setCheckable(true);
        actionNetcdf_ColorScale_RangeVariable->setChecked(true);
        actionShowNetcdfHide = new QAction(MainWindow);
        actionShowNetcdfHide->setObjectName("actionShowNetcdfHide");
        actionShowNetcdfHide->setCheckable(true);
        actionShowNetcdfLocation = new QAction(MainWindow);
        actionShowNetcdfLocation->setObjectName("actionShowNetcdfLocation");
        actionShowNetcdfLocation->setCheckable(true);
        actionShowNetcdfVariable = new QAction(MainWindow);
        actionShowNetcdfVariable->setObjectName("actionShowNetcdfVariable");
        actionShowNetcdfVariable->setCheckable(true);
        actionClimateMeteoPoints = new QAction(MainWindow);
        actionClimateMeteoPoints->setObjectName("actionClimateMeteoPoints");
        actionClimateMeteoGrid = new QAction(MainWindow);
        actionClimateMeteoGrid->setObjectName("actionClimateMeteoGrid");
        actionStatistical_Summary = new QAction(MainWindow);
        actionStatistical_Summary->setObjectName("actionStatistical_Summary");
        actionStatistical_Summary->setAutoRepeat(false);
        actionStatistical_Summary->setShortcutVisibleInContextMenu(false);
        actionDemRangeFixed = new QAction(MainWindow);
        actionDemRangeFixed->setObjectName("actionDemRangeFixed");
        actionDemRangeFixed->setCheckable(true);
        actionDemRangeDynamic = new QAction(MainWindow);
        actionDemRangeDynamic->setObjectName("actionDemRangeDynamic");
        actionDemRangeDynamic->setCheckable(true);
        actionDemRangeDynamic->setChecked(true);
        actionExport_MeteoGrid_toCsv = new QAction(MainWindow);
        actionExport_MeteoGrid_toCsv->setObjectName("actionExport_MeteoGrid_toCsv");
        actionOpenShell = new QAction(MainWindow);
        actionOpenShell->setObjectName("actionOpenShell");
        actionView_output_points = new QAction(MainWindow);
        actionView_output_points->setObjectName("actionView_output_points");
        actionView_output_points->setCheckable(true);
        actionView_output_points->setChecked(true);
        actionFileOutputPointsOpen = new QAction(MainWindow);
        actionFileOutputPointsOpen->setObjectName("actionFileOutputPointsOpen");
        actionFileOutputPointsClose = new QAction(MainWindow);
        actionFileOutputPointsClose->setObjectName("actionFileOutputPointsClose");
        actionFileOutputPoints_NewFromCsv = new QAction(MainWindow);
        actionFileOutputPoints_NewFromCsv->setObjectName("actionFileOutputPoints_NewFromCsv");
        actionInterpolationOutputPointsCurrentTime = new QAction(MainWindow);
        actionInterpolationOutputPointsCurrentTime->setObjectName("actionInterpolationOutputPointsCurrentTime");
        actionInterpolationOutputPointsPeriod = new QAction(MainWindow);
        actionInterpolationOutputPointsPeriod->setObjectName("actionInterpolationOutputPointsPeriod");
        actionCompute_drought = new QAction(MainWindow);
        actionCompute_drought->setObjectName("actionCompute_drought");
        actionFileMeteogrid_ExportDailyData = new QAction(MainWindow);
        actionFileMeteogrid_ExportDailyData->setObjectName("actionFileMeteogrid_ExportDailyData");
        actionFileMeteopointData_XMLexport = new QAction(MainWindow);
        actionFileMeteopointData_XMLexport->setObjectName("actionFileMeteopointData_XMLexport");
        actionFileMeteogridData_XMLexport = new QAction(MainWindow);
        actionFileMeteogridData_XMLexport->setObjectName("actionFileMeteogridData_XMLexport");
        actionWaterTable_importLocation = new QAction(MainWindow);
        actionWaterTable_importLocation->setObjectName("actionWaterTable_importLocation");
        actionWaterTable_importDepth = new QAction(MainWindow);
        actionWaterTable_importDepth->setObjectName("actionWaterTable_importDepth");
        actionWaterTable_computeSingleWell = new QAction(MainWindow);
        actionWaterTable_computeSingleWell->setObjectName("actionWaterTable_computeSingleWell");
        actionWaterTable_computeAllWells = new QAction(MainWindow);
        actionWaterTable_computeAllWells->setObjectName("actionWaterTable_computeAllWells");
        actionWaterTable_showLocation = new QAction(MainWindow);
        actionWaterTable_showLocation->setObjectName("actionWaterTable_showLocation");
        actionWaterTable_showParameters = new QAction(MainWindow);
        actionWaterTable_showParameters->setObjectName("actionWaterTable_showParameters");
        actionWaterTable_showDepth = new QAction(MainWindow);
        actionWaterTable_showDepth->setObjectName("actionWaterTable_showDepth");
        actionWaterTable_Hide = new QAction(MainWindow);
        actionWaterTable_Hide->setObjectName("actionWaterTable_Hide");
        actionWaterTable_showId = new QAction(MainWindow);
        actionWaterTable_showId->setObjectName("actionWaterTable_showId");
        actionSpatialAggregationAssignAltitude = new QAction(MainWindow);
        actionSpatialAggregationAssignAltitude->setObjectName("actionSpatialAggregationAssignAltitude");
        actionInterpolationTopographicIndex = new QAction(MainWindow);
        actionInterpolationTopographicIndex->setObjectName("actionInterpolationTopographicIndex");
        actionShowPointsCVResidual = new QAction(MainWindow);
        actionShowPointsCVResidual->setObjectName("actionShowPointsCVResidual");
        actionShowPointsCVResidual->setCheckable(true);
        actionInterpolationCVCurrentTime = new QAction(MainWindow);
        actionInterpolationCVCurrentTime->setObjectName("actionInterpolationCVCurrentTime");
        actionInterpolationCVPeriod = new QAction(MainWindow);
        actionInterpolationCVPeriod->setObjectName("actionInterpolationCVPeriod");
        actionSpatialAggregationFromGrid_hourly = new QAction(MainWindow);
        actionSpatialAggregationFromGrid_hourly->setObjectName("actionSpatialAggregationFromGrid_hourly");
        actionInterpolationWriteGlocalWeightMaps = new QAction(MainWindow);
        actionInterpolationWriteGlocalWeightMaps->setObjectName("actionInterpolationWriteGlocalWeightMaps");
        actionHide_supplemental_stations = new QAction(MainWindow);
        actionHide_supplemental_stations->setObjectName("actionHide_supplemental_stations");
        actionHide_supplemental_stations->setCheckable(true);
        actionFileLoadInterpolation = new QAction(MainWindow);
        actionFileLoadInterpolation->setObjectName("actionFileLoadInterpolation");
        actionDemZoom_to_layer = new QAction(MainWindow);
        actionDemZoom_to_layer->setObjectName("actionDemZoom_to_layer");
        actionElaboration_Daily_data = new QAction(MainWindow);
        actionElaboration_Daily_data->setObjectName("actionElaboration_Daily_data");
        actionElaboration_Hourly_data = new QAction(MainWindow);
        actionElaboration_Hourly_data->setObjectName("actionElaboration_Hourly_data");
        actionShowInfo = new QAction(MainWindow);
        actionShowInfo->setObjectName("actionShowInfo");
        actionMark_macro_area_stations = new QAction(MainWindow);
        actionMark_macro_area_stations->setObjectName("actionMark_macro_area_stations");
        actionAll_Selected = new QAction(MainWindow);
        actionAll_Selected->setObjectName("actionAll_Selected");
        actionNone_Selected = new QAction(MainWindow);
        actionNone_Selected->setObjectName("actionNone_Selected");
        actionFrom_point_list_Selected = new QAction(MainWindow);
        actionFrom_point_list_Selected->setObjectName("actionFrom_point_list_Selected");
        actionWith_Criteria_Selected = new QAction(MainWindow);
        actionWith_Criteria_Selected->setObjectName("actionWith_Criteria_Selected");
        actionFileMeteopointArkimetLoadVM = new QAction(MainWindow);
        actionFileMeteopointArkimetLoadVM->setObjectName("actionFileMeteopointArkimetLoadVM");
        actionLoad_stations_file = new QAction(MainWindow);
        actionLoad_stations_file->setObjectName("actionLoad_stations_file");
        actionLoad_macro_areas_file = new QAction(MainWindow);
        actionLoad_macro_areas_file->setObjectName("actionLoad_macro_areas_file");
        actionInterpolationGlocalCreateWeightMaps = new QAction(MainWindow);
        actionInterpolationGlocalCreateWeightMaps->setObjectName("actionInterpolationGlocalCreateWeightMaps");
        actionInterpolationGlocalSelectZoneMap = new QAction(MainWindow);
        actionInterpolationGlocalSelectZoneMap->setObjectName("actionInterpolationGlocalSelectZoneMap");
        actionInterpolationGlocalSelectStationLists = new QAction(MainWindow);
        actionInterpolationGlocalSelectStationLists->setObjectName("actionInterpolationGlocalSelectStationLists");
        centralWidget = new QWidget(MainWindow);
        centralWidget->setObjectName("centralWidget");
        centralWidget->setMinimumSize(QSize(0, 0));
        centralWidget->setMaximumSize(QSize(10000, 10000));
        horizontalLayout = new QHBoxLayout(centralWidget);
        horizontalLayout->setSpacing(6);
        horizontalLayout->setContentsMargins(11, 11, 11, 11);
        horizontalLayout->setObjectName("horizontalLayout");
        widget = new QWidget(centralWidget);
        widget->setObjectName("widget");
        widget->setEnabled(true);
        QSizePolicy sizePolicy(QSizePolicy::Preferred, QSizePolicy::Preferred);
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(widget->sizePolicy().hasHeightForWidth());
        widget->setSizePolicy(sizePolicy);
        widget->setMaximumSize(QSize(270, 1000));
        verticalLayout = new QVBoxLayout(widget);
        verticalLayout->setSpacing(0);
        verticalLayout->setContentsMargins(11, 11, 11, 11);
        verticalLayout->setObjectName("verticalLayout");
        verticalLayout->setSizeConstraint(QLayout::SetDefaultConstraint);
        verticalLayout->setContentsMargins(9, 0, 0, 0);
        groupBoxVariable = new QGroupBox(widget);
        groupBoxVariable->setObjectName("groupBoxVariable");
        groupBoxVariable->setMinimumSize(QSize(261, 115));
        groupBoxVariable->setMaximumSize(QSize(261, 115));
        QPalette palette1;
        groupBoxVariable->setPalette(palette1);
        groupBoxVariable->setFont(font);
        groupBoxVariable->setAutoFillBackground(true);
        groupBoxVariable->setTitle(QString::fromUtf8(""));
        labelVariable = new QLabel(groupBoxVariable);
        labelVariable->setObjectName("labelVariable");
        labelVariable->setGeometry(QRect(85, 80, 171, 24));
        QPalette palette2;
        labelVariable->setPalette(palette2);
        QFont font1;
        font1.setPointSize(9);
        font1.setBold(false);
        labelVariable->setFont(font1);
        labelFrequency = new QLabel(groupBoxVariable);
        labelFrequency->setObjectName("labelFrequency");
        labelFrequency->setGeometry(QRect(110, 50, 141, 24));
        labelFrequency->setFont(font1);
        dateEdit = new QDateEdit(groupBoxVariable);
        dateEdit->setObjectName("dateEdit");
        dateEdit->setGeometry(QRect(40, 10, 121, 31));
        QPalette palette3;
        QBrush brush7(QColor(0, 0, 0, 128));
        brush7.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette3.setBrush(QPalette::Active, QPalette::PlaceholderText, brush7);
#endif
        QBrush brush8(QColor(0, 0, 0, 128));
        brush8.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette3.setBrush(QPalette::Inactive, QPalette::PlaceholderText, brush8);
#endif
        QBrush brush9(QColor(0, 0, 0, 128));
        brush9.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette3.setBrush(QPalette::Disabled, QPalette::PlaceholderText, brush9);
#endif
        dateEdit->setPalette(palette3);
        dateEdit->setFont(font1);
        dateEdit->setInputMethodHints(Qt::ImhNone);
        dateEdit->setDateTime(QDateTime(QDate(2090, 1, 1), QTime(0, 0, 0)));
        dateEdit->setMaximumDateTime(QDateTime(QDate(7999, 12, 31), QTime(23, 59, 59)));
        dateEdit->setMinimumDateTime(QDateTime(QDate(1752, 8, 8), QTime(0, 0, 0)));
        dateEdit->setMaximumDate(QDate(7999, 12, 31));
        dateEdit->setCurrentSection(QDateTimeEdit::YearSection);
        dateEdit->setCalendarPopup(true);
        dateEdit->setDate(QDate(2090, 1, 1));
        frequencyButton = new QPushButton(groupBoxVariable);
        frequencyButton->setObjectName("frequencyButton");
        frequencyButton->setGeometry(QRect(10, 50, 90, 24));
        frequencyButton->setFont(font1);
        variableButton = new QPushButton(groupBoxVariable);
        variableButton->setObjectName("variableButton");
        variableButton->setGeometry(QRect(10, 80, 70, 24));
        variableButton->setFont(font1);
        timeEdit = new QSpinBox(groupBoxVariable);
        timeEdit->setObjectName("timeEdit");
        timeEdit->setGeometry(QRect(200, 10, 51, 31));
        timeEdit->setFont(font1);
        timeEdit->setMinimum(1);
        timeEdit->setMaximum(24);
        dayBeforeButton = new QPushButton(groupBoxVariable);
        dayBeforeButton->setObjectName("dayBeforeButton");
        dayBeforeButton->setGeometry(QRect(10, 10, 31, 31));
        dayAfterButton = new QPushButton(groupBoxVariable);
        dayAfterButton->setObjectName("dayAfterButton");
        dayAfterButton->setGeometry(QRect(160, 10, 31, 31));

        verticalLayout->addWidget(groupBoxVariable);

        groupBoxMeteoPoints = new QGroupBox(widget);
        groupBoxMeteoPoints->setObjectName("groupBoxMeteoPoints");
        groupBoxMeteoPoints->setMinimumSize(QSize(261, 75));
        groupBoxMeteoPoints->setMaximumSize(QSize(261, 70));
        groupBoxMeteoPoints->setFont(font);
        groupBoxMeteoPoints->setAutoFillBackground(true);
        widgetColorLegendPoints = new QWidget(groupBoxMeteoPoints);
        widgetColorLegendPoints->setObjectName("widgetColorLegendPoints");
        widgetColorLegendPoints->setGeometry(QRect(1, 25, 259, 40));
        widgetColorLegendPoints->setMaximumSize(QSize(280, 16777215));
        QFont font2;
        font2.setPointSize(8);
        font2.setBold(false);
        widgetColorLegendPoints->setFont(font2);

        verticalLayout->addWidget(groupBoxMeteoPoints);

        groupBoxMeteoGrid = new QGroupBox(widget);
        groupBoxMeteoGrid->setObjectName("groupBoxMeteoGrid");
        groupBoxMeteoGrid->setMinimumSize(QSize(261, 120));
        groupBoxMeteoGrid->setMaximumSize(QSize(261, 120));
        groupBoxMeteoGrid->setFont(font);
        groupBoxMeteoGrid->setAutoFillBackground(true);
        groupBoxMeteoGrid->setFlat(false);
        widgetColorLegendGrid = new QWidget(groupBoxMeteoGrid);
        widgetColorLegendGrid->setObjectName("widgetColorLegendGrid");
        widgetColorLegendGrid->setGeometry(QRect(1, 70, 259, 40));
        widgetColorLegendGrid->setFont(font2);
        meteoGridOpacitySlider = new QSlider(groupBoxMeteoGrid);
        meteoGridOpacitySlider->setObjectName("meteoGridOpacitySlider");
        meteoGridOpacitySlider->setEnabled(false);
        meteoGridOpacitySlider->setGeometry(QRect(20, 20, 231, 22));
        meteoGridOpacitySlider->setToolTipDuration(-1);
#if QT_CONFIG(statustip)
        meteoGridOpacitySlider->setStatusTip(QString::fromUtf8(""));
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        meteoGridOpacitySlider->setWhatsThis(QString::fromUtf8(""));
#endif // QT_CONFIG(whatsthis)
        meteoGridOpacitySlider->setMaximum(100);
        meteoGridOpacitySlider->setValue(66);
        meteoGridOpacitySlider->setOrientation(Qt::Horizontal);
        labelMeteoGridScale = new QLabel(groupBoxMeteoGrid);
        labelMeteoGridScale->setObjectName("labelMeteoGridScale");
        labelMeteoGridScale->setGeometry(QRect(20, 45, 231, 21));
        QPalette palette4;
        labelMeteoGridScale->setPalette(palette4);
        labelMeteoGridScale->setFont(font1);

        verticalLayout->addWidget(groupBoxMeteoGrid);

        groupBoxRaster = new QGroupBox(widget);
        groupBoxRaster->setObjectName("groupBoxRaster");
        groupBoxRaster->setEnabled(true);
        groupBoxRaster->setMinimumSize(QSize(261, 120));
        groupBoxRaster->setMaximumSize(QSize(261, 120));
        QPalette palette5;
        palette5.setBrush(QPalette::Active, QPalette::Button, brush);
        palette5.setBrush(QPalette::Active, QPalette::Midlight, brush);
        palette5.setBrush(QPalette::Active, QPalette::Dark, brush1);
        palette5.setBrush(QPalette::Active, QPalette::Mid, brush2);
        palette5.setBrush(QPalette::Active, QPalette::Window, brush);
        palette5.setBrush(QPalette::Active, QPalette::Shadow, brush3);
        palette5.setBrush(QPalette::Active, QPalette::AlternateBase, brush);
        QBrush brush10(QColor(0, 0, 0, 128));
        brush10.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette5.setBrush(QPalette::Active, QPalette::PlaceholderText, brush10);
#endif
        palette5.setBrush(QPalette::Inactive, QPalette::Button, brush);
        palette5.setBrush(QPalette::Inactive, QPalette::Midlight, brush);
        palette5.setBrush(QPalette::Inactive, QPalette::Dark, brush1);
        palette5.setBrush(QPalette::Inactive, QPalette::Mid, brush2);
        palette5.setBrush(QPalette::Inactive, QPalette::Window, brush);
        palette5.setBrush(QPalette::Inactive, QPalette::Shadow, brush3);
        palette5.setBrush(QPalette::Inactive, QPalette::AlternateBase, brush);
        QBrush brush11(QColor(0, 0, 0, 128));
        brush11.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette5.setBrush(QPalette::Inactive, QPalette::PlaceholderText, brush11);
#endif
        palette5.setBrush(QPalette::Disabled, QPalette::Button, brush);
        palette5.setBrush(QPalette::Disabled, QPalette::Midlight, brush);
        palette5.setBrush(QPalette::Disabled, QPalette::Dark, brush1);
        palette5.setBrush(QPalette::Disabled, QPalette::Mid, brush2);
        palette5.setBrush(QPalette::Disabled, QPalette::Window, brush);
        palette5.setBrush(QPalette::Disabled, QPalette::Shadow, brush3);
        palette5.setBrush(QPalette::Disabled, QPalette::AlternateBase, brush);
        QBrush brush12(QColor(0, 0, 0, 128));
        brush12.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette5.setBrush(QPalette::Disabled, QPalette::PlaceholderText, brush12);
#endif
        groupBoxRaster->setPalette(palette5);
        groupBoxRaster->setFont(font);
        groupBoxRaster->setAutoFillBackground(true);
        groupBoxRaster->setTitle(QString::fromUtf8("Raster"));
        rasterOpacitySlider = new QSlider(groupBoxRaster);
        rasterOpacitySlider->setObjectName("rasterOpacitySlider");
        rasterOpacitySlider->setEnabled(false);
        rasterOpacitySlider->setGeometry(QRect(20, 20, 231, 22));
        rasterOpacitySlider->setToolTipDuration(-1);
#if QT_CONFIG(statustip)
        rasterOpacitySlider->setStatusTip(QString::fromUtf8(""));
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        rasterOpacitySlider->setWhatsThis(QString::fromUtf8(""));
#endif // QT_CONFIG(whatsthis)
        rasterOpacitySlider->setMaximum(100);
        rasterOpacitySlider->setValue(66);
        rasterOpacitySlider->setOrientation(Qt::Horizontal);
        widgetColorLegendRaster = new QWidget(groupBoxRaster);
        widgetColorLegendRaster->setObjectName("widgetColorLegendRaster");
        widgetColorLegendRaster->setGeometry(QRect(1, 70, 259, 40));
        widgetColorLegendRaster->setFont(font2);
        labelRasterScale = new QLabel(groupBoxRaster);
        labelRasterScale->setObjectName("labelRasterScale");
        labelRasterScale->setGeometry(QRect(20, 45, 231, 21));
        QPalette palette6;
        labelRasterScale->setPalette(palette6);
        labelRasterScale->setFont(font1);

        verticalLayout->addWidget(groupBoxRaster);

        groupBoxNetcdf = new QGroupBox(widget);
        groupBoxNetcdf->setObjectName("groupBoxNetcdf");
        groupBoxNetcdf->setEnabled(true);
        groupBoxNetcdf->setMinimumSize(QSize(261, 120));
        groupBoxNetcdf->setMaximumSize(QSize(261, 120));
        groupBoxNetcdf->setFont(font);
        groupBoxNetcdf->setAutoFillBackground(true);
        groupBoxNetcdf->setFlat(false);
        widgetColorLegendNetcdf = new QWidget(groupBoxNetcdf);
        widgetColorLegendNetcdf->setObjectName("widgetColorLegendNetcdf");
        widgetColorLegendNetcdf->setGeometry(QRect(1, 72, 259, 40));
        widgetColorLegendNetcdf->setFont(font2);
        netcdfOpacitySlider = new QSlider(groupBoxNetcdf);
        netcdfOpacitySlider->setObjectName("netcdfOpacitySlider");
        netcdfOpacitySlider->setEnabled(true);
        netcdfOpacitySlider->setGeometry(QRect(20, 20, 231, 22));
        netcdfOpacitySlider->setToolTipDuration(-1);
#if QT_CONFIG(statustip)
        netcdfOpacitySlider->setStatusTip(QString::fromUtf8(""));
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        netcdfOpacitySlider->setWhatsThis(QString::fromUtf8(""));
#endif // QT_CONFIG(whatsthis)
        netcdfOpacitySlider->setMaximum(100);
        netcdfOpacitySlider->setValue(33);
        netcdfOpacitySlider->setOrientation(Qt::Horizontal);
        netCDFButtonVariable = new QPushButton(groupBoxNetcdf);
        netCDFButtonVariable->setObjectName("netCDFButtonVariable");
        netCDFButtonVariable->setEnabled(true);
        netCDFButtonVariable->setGeometry(QRect(10, 44, 70, 24));
        netCDFButtonVariable->setFont(font1);
        labelNetcdfVariable = new QLabel(groupBoxNetcdf);
        labelNetcdfVariable->setObjectName("labelNetcdfVariable");
        labelNetcdfVariable->setGeometry(QRect(90, 44, 170, 24));
        QPalette palette7;
        labelNetcdfVariable->setPalette(palette7);
        labelNetcdfVariable->setFont(font1);

        verticalLayout->addWidget(groupBoxNetcdf);

        groupBoxCV = new QGroupBox(widget);
        groupBoxCV->setObjectName("groupBoxCV");
        groupBoxCV->setMaximumSize(QSize(260, 150));
        textEditCV = new QPlainTextEdit(groupBoxCV);
        textEditCV->setObjectName("textEditCV");
        textEditCV->setGeometry(QRect(10, 20, 241, 118));
        textEditCV->setReadOnly(true);

        verticalLayout->addWidget(groupBoxCV);

        groupBoxElaboration = new QGroupBox(widget);
        groupBoxElaboration->setObjectName("groupBoxElaboration");
        groupBoxElaboration->setEnabled(true);
        groupBoxElaboration->setMinimumSize(QSize(261, 150));
        groupBoxElaboration->setMaximumSize(QSize(261, 150));
        groupBoxElaboration->setFont(font);
        groupBoxElaboration->setAutoFillBackground(true);
        formLayout = new QFormLayout(groupBoxElaboration);
        formLayout->setSpacing(6);
        formLayout->setContentsMargins(11, 11, 11, 11);
        formLayout->setObjectName("formLayout");
        label_elab1 = new QLabel(groupBoxElaboration);
        label_elab1->setObjectName("label_elab1");
        label_elab1->setMinimumSize(QSize(50, 20));
        label_elab1->setMaximumSize(QSize(50, 20));
        label_elab1->setFont(font1);

        formLayout->setWidget(0, QFormLayout::LabelRole, label_elab1);

        lineEditElab1 = new QLineEdit(groupBoxElaboration);
        lineEditElab1->setObjectName("lineEditElab1");
        lineEditElab1->setMinimumSize(QSize(185, 20));
        lineEditElab1->setMaximumSize(QSize(185, 20));

        formLayout->setWidget(0, QFormLayout::FieldRole, lineEditElab1);

        label_elab2 = new QLabel(groupBoxElaboration);
        label_elab2->setObjectName("label_elab2");
        label_elab2->setMinimumSize(QSize(50, 20));
        label_elab2->setMaximumSize(QSize(50, 20));
        label_elab2->setFont(font1);

        formLayout->setWidget(1, QFormLayout::LabelRole, label_elab2);

        lineEditElab2 = new QLineEdit(groupBoxElaboration);
        lineEditElab2->setObjectName("lineEditElab2");
        lineEditElab2->setMinimumSize(QSize(185, 20));
        lineEditElab2->setMaximumSize(QSize(185, 20));

        formLayout->setWidget(1, QFormLayout::FieldRole, lineEditElab2);

        label_variable = new QLabel(groupBoxElaboration);
        label_variable->setObjectName("label_variable");
        label_variable->setMinimumSize(QSize(50, 20));
        label_variable->setMaximumSize(QSize(50, 20));
        label_variable->setFont(font1);

        formLayout->setWidget(2, QFormLayout::LabelRole, label_variable);

        lineEditVariable = new QLineEdit(groupBoxElaboration);
        lineEditVariable->setObjectName("lineEditVariable");
        lineEditVariable->setMinimumSize(QSize(185, 20));
        lineEditVariable->setMaximumSize(QSize(185, 20));

        formLayout->setWidget(2, QFormLayout::FieldRole, lineEditVariable);

        label_period = new QLabel(groupBoxElaboration);
        label_period->setObjectName("label_period");
        label_period->setMinimumSize(QSize(50, 20));
        label_period->setMaximumSize(QSize(50, 20));
        label_period->setFont(font1);

        formLayout->setWidget(3, QFormLayout::LabelRole, label_period);

        lineEditPeriod = new QLineEdit(groupBoxElaboration);
        lineEditPeriod->setObjectName("lineEditPeriod");
        lineEditPeriod->setMinimumSize(QSize(185, 20));
        lineEditPeriod->setMaximumSize(QSize(185, 20));

        formLayout->setWidget(3, QFormLayout::FieldRole, lineEditPeriod);

        label_offset = new QLabel(groupBoxElaboration);
        label_offset->setObjectName("label_offset");
        label_offset->setMinimumSize(QSize(50, 20));
        label_offset->setMaximumSize(QSize(50, 20));
        label_offset->setFont(font1);

        formLayout->setWidget(4, QFormLayout::LabelRole, label_offset);

        lineEditOffset = new QLineEdit(groupBoxElaboration);
        lineEditOffset->setObjectName("lineEditOffset");
        lineEditOffset->setMinimumSize(QSize(185, 20));
        lineEditOffset->setMaximumSize(QSize(185, 20));

        formLayout->setWidget(4, QFormLayout::FieldRole, lineEditOffset);


        verticalLayout->addWidget(groupBoxElaboration);


        horizontalLayout->addWidget(widget);

        widgetMap = new QWidget(centralWidget);
        widgetMap->setObjectName("widgetMap");
        widgetMap->setEnabled(true);
        widgetMap->setMinimumSize(QSize(600, 400));
        widgetMap->setMaximumSize(QSize(10000, 10000));
        widgetMap->setFont(font);
        widgetMap->setMouseTracking(true);

        horizontalLayout->addWidget(widgetMap);

        MainWindow->setCentralWidget(centralWidget);
        menuBar = new QMenuBar(MainWindow);
        menuBar->setObjectName("menuBar");
        menuBar->setGeometry(QRect(0, 0, 1276, 23));
        QPalette palette8;
        menuBar->setPalette(palette8);
        menuBar->setAutoFillBackground(false);
        menuFile = new QMenu(menuBar);
        menuFile->setObjectName("menuFile");
        menuFileNetCDF = new QMenu(menuFile);
        menuFileNetCDF->setObjectName("menuFileNetCDF");
        menuColor_Scale = new QMenu(menuFileNetCDF);
        menuColor_Scale->setObjectName("menuColor_Scale");
        menuNetcdf_ColorScale_Range = new QMenu(menuColor_Scale);
        menuNetcdf_ColorScale_Range->setObjectName("menuNetcdf_ColorScale_Range");
        menuMeteogrid = new QMenu(menuFile);
        menuMeteogrid->setObjectName("menuMeteogrid");
        menuExport = new QMenu(menuMeteogrid);
        menuExport->setObjectName("menuExport");
        menuFileMeteopoint = new QMenu(menuFile);
        menuFileMeteopoint->setObjectName("menuFileMeteopoint");
        menuFileMeteopointNew = new QMenu(menuFileMeteopoint);
        menuFileMeteopointNew->setObjectName("menuFileMeteopointNew");
        menuImport = new QMenu(menuFileMeteopoint);
        menuImport->setObjectName("menuImport");
        menuArkimet = new QMenu(menuFileMeteopoint);
        menuArkimet->setObjectName("menuArkimet");
        menuOpen_DEM = new QMenu(menuFile);
        menuOpen_DEM->setObjectName("menuOpen_DEM");
        menuSet_range = new QMenu(menuOpen_DEM);
        menuSet_range->setObjectName("menuSet_range");
        menuProject = new QMenu(menuFile);
        menuProject->setObjectName("menuProject");
        menuFileOutputPoints = new QMenu(menuFile);
        menuFileOutputPoints->setObjectName("menuFileOutputPoints");
        menuMacro_areas_file = new QMenu(menuFile);
        menuMacro_areas_file->setObjectName("menuMacro_areas_file");
        menuMeteopoint = new QMenu(menuBar);
        menuMeteopoint->setObjectName("menuMeteopoint");
        menuActive_points = new QMenu(menuMeteopoint);
        menuActive_points->setObjectName("menuActive_points");
        menuActive_points->setEnabled(false);
        menuDeactive_points = new QMenu(menuMeteopoint);
        menuDeactive_points->setObjectName("menuDeactive_points");
        menuDeactive_points->setEnabled(false);
        menuDelete_data = new QMenu(menuMeteopoint);
        menuDelete_data->setObjectName("menuDelete_data");
        menuDelete_data->setEnabled(false);
        menuDelete_points = new QMenu(menuMeteopoint);
        menuDelete_points->setObjectName("menuDelete_points");
        menuDelete_points->setEnabled(false);
        menuMark_points = new QMenu(menuMeteopoint);
        menuMark_points->setObjectName("menuMark_points");
        menuMark_points->setEnabled(false);
        menuShift_data = new QMenu(menuMeteopoint);
        menuShift_data->setObjectName("menuShift_data");
        menuShift_data->setEnabled(false);
        menuSearch_points = new QMenu(menuMeteopoint);
        menuSearch_points->setObjectName("menuSearch_points");
        menuSearch_points->setEnabled(false);
        menuCompute_daily_data_from_hourly = new QMenu(menuMeteopoint);
        menuCompute_daily_data_from_hourly->setObjectName("menuCompute_daily_data_from_hourly");
        menuCompute_daily_data_from_hourly->setEnabled(false);
        menuSelected_points = new QMenu(menuMeteopoint);
        menuSelected_points->setObjectName("menuSelected_points");
        menuSelected_points->setEnabled(false);
        menuSettings = new QMenu(menuBar);
        menuSettings->setObjectName("menuSettings");
        menuSettingsMap = new QMenu(menuSettings);
        menuSettingsMap->setObjectName("menuSettingsMap");
        menuInterpolation = new QMenu(menuBar);
        menuInterpolation->setObjectName("menuInterpolation");
        menuTopographicDistanceMaps = new QMenu(menuInterpolation);
        menuTopographicDistanceMaps->setObjectName("menuTopographicDistanceMaps");
        menuInterpolationMeteogrid = new QMenu(menuInterpolation);
        menuInterpolationMeteogrid->setObjectName("menuInterpolationMeteogrid");
        menuInterpolationMeteogridGriddingTask = new QMenu(menuInterpolationMeteogrid);
        menuInterpolationMeteogridGriddingTask->setObjectName("menuInterpolationMeteogridGriddingTask");
        menuInterpolation_to_output_points = new QMenu(menuInterpolation);
        menuInterpolation_to_output_points->setObjectName("menuInterpolation_to_output_points");
        menuInterpolationCV = new QMenu(menuInterpolation);
        menuInterpolationCV->setObjectName("menuInterpolationCV");
        menuGlocal = new QMenu(menuInterpolation);
        menuGlocal->setObjectName("menuGlocal");
        menuElaboration = new QMenu(menuBar);
        menuElaboration->setObjectName("menuElaboration");
        menuElaborationElab = new QMenu(menuElaboration);
        menuElaborationElab->setObjectName("menuElaborationElab");
        menuCompute_elaboration = new QMenu(menuElaborationElab);
        menuCompute_elaboration->setObjectName("menuCompute_elaboration");
        menuClimate = new QMenu(menuElaboration);
        menuClimate->setObjectName("menuClimate");
        menuClimate_fields = new QMenu(menuClimate);
        menuClimate_fields->setObjectName("menuClimate_fields");
        menuSpatialAggregation = new QMenu(menuElaboration);
        menuSpatialAggregation->setObjectName("menuSpatialAggregation");
        menuShow = new QMenu(menuBar);
        menuShow->setObjectName("menuShow");
        menuShowPoints = new QMenu(menuShow);
        menuShowPoints->setObjectName("menuShowPoints");
        menuShowPoints->setEnabled(true);
        menuShowPointsAnomaly = new QMenu(menuShowPoints);
        menuShowPointsAnomaly->setObjectName("menuShowPointsAnomaly");
        menustyle = new QMenu(menuShowPoints);
        menustyle->setObjectName("menustyle");
        menuShowGrid = new QMenu(menuShow);
        menuShowGrid->setObjectName("menuShowGrid");
        menuShowGridAnomaly = new QMenu(menuShowGrid);
        menuShowGridAnomaly->setObjectName("menuShowGridAnomaly");
        menuNetCDF = new QMenu(menuShow);
        menuNetCDF->setObjectName("menuNetCDF");
        menuRadiation = new QMenu(menuBar);
        menuRadiation->setObjectName("menuRadiation");
        menuMeteoGrid = new QMenu(menuBar);
        menuMeteoGrid->setObjectName("menuMeteoGrid");
        menuColor_scale = new QMenu(menuMeteoGrid);
        menuColor_scale->setObjectName("menuColor_scale");
        menuRange = new QMenu(menuColor_scale);
        menuRange->setObjectName("menuRange");
        menuActive_cells = new QMenu(menuMeteoGrid);
        menuActive_cells->setObjectName("menuActive_cells");
        menuActive_cells->setEnabled(false);
        menuWaterTable = new QMenu(menuBar);
        menuWaterTable->setObjectName("menuWaterTable");
        menuWaterTableData = new QMenu(menuWaterTable);
        menuWaterTableData->setObjectName("menuWaterTableData");
        menuWaterTableCompute = new QMenu(menuWaterTable);
        menuWaterTableCompute->setObjectName("menuWaterTableCompute");
        menuWaterTableShow = new QMenu(menuWaterTable);
        menuWaterTableShow->setObjectName("menuWaterTableShow");
        MainWindow->setMenuBar(menuBar);
        statusBar = new QStatusBar(MainWindow);
        statusBar->setObjectName("statusBar");
        MainWindow->setStatusBar(statusBar);

        menuBar->addAction(menuFile->menuAction());
        menuBar->addAction(menuShow->menuAction());
        menuBar->addAction(menuMeteopoint->menuAction());
        menuBar->addAction(menuMeteoGrid->menuAction());
        menuBar->addAction(menuInterpolation->menuAction());
        menuBar->addAction(menuRadiation->menuAction());
        menuBar->addAction(menuElaboration->menuAction());
        menuBar->addAction(menuWaterTable->menuAction());
        menuBar->addAction(menuSettings->menuAction());
        menuFile->addAction(menuProject->menuAction());
        menuFile->addSeparator();
        menuFile->addAction(menuOpen_DEM->menuAction());
        menuFile->addSeparator();
        menuFile->addAction(menuFileMeteopoint->menuAction());
        menuFile->addSeparator();
        menuFile->addAction(menuFileOutputPoints->menuAction());
        menuFile->addSeparator();
        menuFile->addAction(menuMeteogrid->menuAction());
        menuFile->addSeparator();
        menuFile->addAction(menuFileNetCDF->menuAction());
        menuFile->addSeparator();
        menuFile->addAction(menuMacro_areas_file->menuAction());
        menuFile->addSeparator();
        menuFile->addAction(actionOpenShell);
        menuFileNetCDF->addAction(actionFileNetCDF_Open);
        menuFileNetCDF->addAction(actionNetCDF_Close);
        menuFileNetCDF->addSeparator();
        menuFileNetCDF->addAction(menuColor_Scale->menuAction());
        menuFileNetCDF->addSeparator();
        menuFileNetCDF->addAction(actionNetCDF_ShowMetadata);
        menuColor_Scale->addAction(actionNetcdf_ColorScale_SetType);
        menuColor_Scale->addAction(menuNetcdf_ColorScale_Range->menuAction());
        menuColor_Scale->addAction(actionNetcdf_ColorScale_Reverse);
        menuNetcdf_ColorScale_Range->addAction(actionNetcdf_ColorScale_Fixed);
        menuNetcdf_ColorScale_Range->addAction(actionNetcdf_ColorScale_RangeVariable);
        menuMeteogrid->addAction(actionFileMeteogridOpen);
        menuMeteogrid->addAction(actionFileMeteogridClose);
        menuMeteogrid->addSeparator();
        menuMeteogrid->addAction(actionNewMeteoGrid);
        menuMeteogrid->addAction(actionFileMeteogridDelete);
        menuMeteogrid->addSeparator();
        menuMeteogrid->addAction(actioFileMeteogrid_Load_current_data);
        menuMeteogrid->addAction(actionImport_data_XML_grid);
        menuMeteogrid->addAction(actionFileMeteogridData_XMLexport);
        menuMeteogrid->addAction(actionFileMeteogrid_ExportDailyData);
        menuMeteogrid->addAction(menuExport->menuAction());
        menuMeteogrid->addSeparator();
        menuExport->addAction(actionFileMeteogridExportRaster);
        menuExport->addAction(actionFileMeteogridExportNetcdf);
        menuExport->addAction(actionExport_MeteoGrid_toCsv);
        menuFileMeteopoint->addAction(menuFileMeteopointNew->menuAction());
        menuFileMeteopoint->addAction(actionFileMeteopointOpen);
        menuFileMeteopoint->addAction(actionFileMeteopointClose);
        menuFileMeteopoint->addSeparator();
        menuFileMeteopoint->addAction(menuArkimet->menuAction());
        menuFileMeteopoint->addAction(menuImport->menuAction());
        menuFileMeteopoint->addAction(actionExport_MeteoPoints_toCsv);
        menuFileMeteopointNew->addAction(actionFileMeteopointNewArkimet);
        menuFileMeteopointNew->addAction(actionFileMeteopointNewCsv);
        menuImport->addAction(actionFileMeteopointProperties_import);
        menuImport->addAction(actionFileMeteopointData_XMLimport);
        menuImport->addAction(actionFileMeteopointData_XMLexport);
        menuArkimet->addAction(actionFileMeteopointArkimetDownload);
        menuArkimet->addAction(actionFileMeteopointArkimetLoadVM);
        menuArkimet->addSeparator();
        menuArkimet->addAction(actionFileMeteopointArkimetUpdateMeteopoints);
        menuArkimet->addAction(actionFileMeteopointArkimetUpdatePointProperties);
        menuArkimet->addAction(actionFileMeteopointArkimetUpdateDatasets);
        menuOpen_DEM->addAction(actionFileDemOpen);
        menuOpen_DEM->addSeparator();
        menuOpen_DEM->addAction(actionFileExportInterpolation);
        menuOpen_DEM->addAction(actionFileLoadInterpolation);
        menuOpen_DEM->addAction(actionDemRestore);
        menuOpen_DEM->addAction(actionDemZoom_to_layer);
        menuOpen_DEM->addSeparator();
        menuOpen_DEM->addAction(menuSet_range->menuAction());
        menuSet_range->addAction(actionDemRangeFixed);
        menuSet_range->addAction(actionDemRangeDynamic);
        menuProject->addAction(actionFileOpenProject);
        menuProject->addAction(actionFileCloseProject);
        menuProject->addSeparator();
        menuProject->addAction(actionFileSaveProjectAs);
        menuProject->addAction(actionFileSaveProject);
        menuProject->addSeparator();
        menuProject->addAction(actionShow_InfoProject);
        menuFileOutputPoints->addAction(actionFileOutputPoints_NewFromCsv);
        menuFileOutputPoints->addAction(actionFileOutputPointsOpen);
        menuFileOutputPoints->addAction(actionFileOutputPointsClose);
        menuMacro_areas_file->addAction(actionLoad_stations_file);
        menuMacro_areas_file->addAction(actionLoad_macro_areas_file);
        menuMeteopoint->addAction(actionMeteopointQualitySpatial);
        menuMeteopoint->addAction(actionMeteopointRectangleSelection);
        menuMeteopoint->addSeparator();
        menuMeteopoint->addAction(menuSelected_points->menuAction());
        menuMeteopoint->addAction(actionMeteoPointsClear_selection);
        menuMeteopoint->addAction(menuSearch_points->menuAction());
        menuMeteopoint->addAction(menuMark_points->menuAction());
        menuMeteopoint->addSeparator();
        menuMeteopoint->addAction(menuActive_points->menuAction());
        menuMeteopoint->addAction(menuDeactive_points->menuAction());
        menuMeteopoint->addAction(menuDelete_points->menuAction());
        menuMeteopoint->addAction(menuDelete_data->menuAction());
        menuMeteopoint->addSeparator();
        menuMeteopoint->addAction(menuShift_data->menuAction());
        menuMeteopoint->addAction(actionMeteopointDataCount);
        menuMeteopoint->addSeparator();
        menuMeteopoint->addAction(menuCompute_daily_data_from_hourly->menuAction());
        menuActive_points->addAction(actionAll_active);
        menuActive_points->addAction(actionSelected_active);
        menuActive_points->addAction(actionFrom_point_list_active);
        menuActive_points->addAction(actionWith_Criteria_active);
        menuActive_points->addAction(actionRandom_subset_active);
        menuDeactive_points->addAction(actionAll_notActive);
        menuDeactive_points->addAction(actionSelected_notActive);
        menuDeactive_points->addAction(actionWith_NO_DATA_notActive);
        menuDeactive_points->addAction(actionWith_Criteria_notActive);
        menuDelete_data->addAction(actionDeleteData_selected);
        menuDelete_data->addAction(actionDeleteData_Active);
        menuDelete_data->addAction(actionDeleteData_notActive);
        menuDelete_points->addAction(actionDeletePoint_selected);
        menuDelete_points->addAction(actionDeletePoint_notSelected);
        menuDelete_points->addAction(actionDeletePoint_notActive);
        menuMark_points->addSeparator();
        menuMark_points->addAction(actionMark_from_pointlist);
        menuMark_points->addAction(actionUnmark_all_points);
        menuShift_data->addAction(actionShiftDataAll);
        menuShift_data->addAction(actionShiftDataSelected);
        menuSearch_points->addAction(actionSearchPointName);
        menuSearch_points->addAction(actionSearchPointId);
        menuCompute_daily_data_from_hourly->addAction(actionCompute_daily_from_Hourly_all);
        menuCompute_daily_data_from_hourly->addAction(actionCompute_daily_from_Hourly_selected);
        menuSelected_points->addAction(actionAll_Selected);
        menuSelected_points->addAction(actionNone_Selected);
        menuSelected_points->addAction(actionFrom_point_list_Selected);
        menuSelected_points->addAction(actionWith_Criteria_Selected);
        menuSettings->addAction(menuSettingsMap->menuAction());
        menuSettings->addAction(actionSettingsParameters);
        menuSettings->addSeparator();
        menuSettings->addAction(actionShowInfo);
        menuSettingsMap->addAction(actionSettingsMapOpenStreetMap);
        menuSettingsMap->addAction(actionSettingsMapGoogleMap);
        menuSettingsMap->addAction(actionSettingsMapGoogleSatellite);
        menuSettingsMap->addAction(actionSettingsMapGoogleHybrid);
        menuSettingsMap->addAction(actionSettingsMapGoogleTerrain);
        menuSettingsMap->addAction(actionSettingsMapStamenTerrain);
        menuSettingsMap->addAction(actionSettingsMapEsriSatellite);
        menuInterpolation->addAction(actionInterpolationDem);
        menuInterpolation->addAction(menuInterpolationMeteogrid->menuAction());
        menuInterpolation->addAction(menuInterpolation_to_output_points->menuAction());
        menuInterpolation->addAction(menuInterpolationCV->menuAction());
        menuInterpolation->addAction(actionInterpolationSettings);
        menuInterpolation->addSeparator();
        menuInterpolation->addAction(menuGlocal->menuAction());
        menuInterpolation->addAction(menuTopographicDistanceMaps->menuAction());
        menuInterpolation->addAction(actionInterpolationTopographicIndex);
        menuInterpolation->addSeparator();
        menuInterpolation->addAction(action_Proxy_graph);
        menuTopographicDistanceMaps->addAction(actionTopographicDistanceMapsSave);
        menuTopographicDistanceMaps->addAction(actionTopographicDistanceMapsLoad);
        menuInterpolationMeteogrid->addAction(actionInterpolationMeteogridCurrentTime);
        menuInterpolationMeteogrid->addAction(actionInterpolationMeteogridSaveCurrentData);
        menuInterpolationMeteogrid->addAction(actionInterpolationMeteogridPeriod);
        menuInterpolationMeteogrid->addSeparator();
        menuInterpolationMeteogrid->addAction(menuInterpolationMeteogridGriddingTask->menuAction());
        menuInterpolationMeteogridGriddingTask->addAction(actionInterpolationMeteogridGriddingTaskAdd);
        menuInterpolationMeteogridGriddingTask->addAction(actionInterpolationMeteogridGriddingTaskRemove);
        menuInterpolation_to_output_points->addAction(actionInterpolationOutputPointsCurrentTime);
        menuInterpolation_to_output_points->addAction(actionInterpolationOutputPointsPeriod);
        menuInterpolationCV->addAction(actionInterpolationCVCurrentTime);
        menuInterpolationCV->addAction(actionInterpolationCVPeriod);
        menuGlocal->addAction(actionInterpolationGlocalCreateWeightMaps);
        menuElaboration->addAction(menuElaborationElab->menuAction());
        menuElaboration->addAction(menuClimate->menuAction());
        menuElaboration->addSeparator();
        menuElaboration->addAction(menuSpatialAggregation->menuAction());
        menuElaboration->addSeparator();
        menuElaboration->addAction(actionStatistical_Summary);
        menuElaborationElab->addAction(menuCompute_elaboration->menuAction());
        menuElaborationElab->addAction(actionAnomaly);
        menuElaborationElab->addAction(actionCompute_drought);
        menuCompute_elaboration->addAction(actionElaboration_Daily_data);
        menuCompute_elaboration->addAction(actionElaboration_Hourly_data);
        menuClimate->addAction(actionClimate);
        menuClimate->addAction(menuClimate_fields->menuAction());
        menuClimate_fields->addAction(actionClimateMeteoPoints);
        menuClimate_fields->addAction(actionClimateMeteoGrid);
        menuSpatialAggregation->addAction(actionSpatialAggregationOpenDB);
        menuSpatialAggregation->addAction(actionSpatialAggregationNewDB);
        menuSpatialAggregation->addSeparator();
        menuSpatialAggregation->addAction(actionSpatialAggregationFromGrid);
        menuSpatialAggregation->addAction(actionSpatialAggregationFromGrid_hourly);
        menuSpatialAggregation->addSeparator();
        menuSpatialAggregation->addAction(actionSpatialAggregationAssignAltitude);
        menuShow->addAction(menuShowPoints->menuAction());
        menuShow->addAction(menuShowGrid->menuAction());
        menuShow->addAction(menuNetCDF->menuAction());
        menuShowPoints->addAction(actionView_not_active_points);
        menuShowPoints->addAction(actionView_output_points);
        menuShowPoints->addAction(actionHide_supplemental_stations);
        menuShowPoints->addAction(menustyle->menuAction());
        menuShowPoints->addSeparator();
        menuShowPoints->addAction(actionShowPointsHide);
        menuShowPoints->addAction(actionShowPointsLocation);
        menuShowPoints->addAction(actionShowPointsCurrent);
        menuShowPoints->addAction(actionShowPointsCVResidual);
        menuShowPoints->addAction(actionShowPointsElab);
        menuShowPoints->addAction(menuShowPointsAnomaly->menuAction());
        menuShowPoints->addAction(actionShowPointsClimate);
        menuShowPoints->addAction(actionMark_macro_area_stations);
        menuShowPointsAnomaly->addAction(actionShowPointsAnomalyAbs);
        menuShowPointsAnomaly->addAction(actionShowPointsAnomalyPerc);
        menustyle->addAction(actionPointStyleCircle);
        menustyle->addAction(actionPointStyleText);
        menustyle->addAction(actionPointStyleText_multicolor);
        menuShowGrid->addAction(actionShowGridHide);
        menuShowGrid->addAction(actionShowGridLocation);
        menuShowGrid->addAction(actionShowGridCurrent);
        menuShowGrid->addAction(actionShowGridElab);
        menuShowGrid->addAction(menuShowGridAnomaly->menuAction());
        menuShowGrid->addAction(actionShowGridClimate);
        menuShowGridAnomaly->addAction(actionShowGridAnomalyAbs);
        menuShowGridAnomaly->addAction(actionShowGridAnomalyPerc);
        menuNetCDF->addAction(actionShowNetcdfHide);
        menuNetCDF->addAction(actionShowNetcdfLocation);
        menuNetCDF->addAction(actionShowNetcdfVariable);
        menuRadiation->addAction(actionRadiationSettings);
        menuMeteoGrid->addAction(menuColor_scale->menuAction());
        menuMeteoGrid->addSeparator();
        menuMeteoGrid->addAction(actionMeteogridMissingData);
        menuMeteoGrid->addAction(menuActive_cells->menuAction());
        menuMeteoGrid->addAction(actionCompute_monthly_data_from_daily);
        menuColor_scale->addAction(actionMeteoGrid_Set_color_scale);
        menuColor_scale->addAction(menuRange->menuAction());
        menuColor_scale->addAction(actionMeteoGrid_Reverse_color_scale);
        menuRange->addAction(flagMeteoGrid_Fixed_color_scale);
        menuRange->addAction(flagMeteoGrid_Dynamic_color_scale);
        menuActive_cells->addAction(actionMeteoGridActiveAll);
        menuActive_cells->addAction(actionMeteoGridActiveWith_DEM);
        menuWaterTable->addAction(menuWaterTableData->menuAction());
        menuWaterTable->addAction(menuWaterTableCompute->menuAction());
        menuWaterTable->addSeparator();
        menuWaterTable->addAction(menuWaterTableShow->menuAction());
        menuWaterTable->addAction(actionWaterTable_Hide);
        menuWaterTableData->addAction(actionWaterTable_importLocation);
        menuWaterTableData->addAction(actionWaterTable_importDepth);
        menuWaterTableCompute->addAction(actionWaterTable_computeSingleWell);
        menuWaterTableCompute->addAction(actionWaterTable_computeAllWells);
        menuWaterTableShow->addAction(actionWaterTable_showId);
        menuWaterTableShow->addAction(actionWaterTable_showLocation);
        menuWaterTableShow->addAction(actionWaterTable_showParameters);
        menuWaterTableShow->addAction(actionWaterTable_showDepth);

        retranslateUi(MainWindow);

        QMetaObject::connectSlotsByName(MainWindow);
    } // setupUi

    void retranslateUi(QMainWindow *MainWindow)
    {
        MainWindow->setWindowTitle(QCoreApplication::translate("MainWindow", "PRAGA", nullptr));
        actionSettingsMapOpenStreetMap->setText(QCoreApplication::translate("MainWindow", "OpenStreetMap", nullptr));
        actionSettingsMapEsriSatellite->setText(QCoreApplication::translate("MainWindow", "ESRI world Imagery", nullptr));
        actionSettingsMapStamenTerrain->setText(QCoreApplication::translate("MainWindow", "Stamen terrain", nullptr));
        actionMeteopointRectangleSelection->setText(QCoreApplication::translate("MainWindow", "Rectangle Selection", nullptr));
        actionMeteopointQualitySpatial->setText(QCoreApplication::translate("MainWindow", "Spatial quality control", nullptr));
        actionInterpolationDem->setText(QCoreApplication::translate("MainWindow", "Interpolation to DEM", nullptr));
        actionInterpolationSettings->setText(QCoreApplication::translate("MainWindow", "Settings...", nullptr));
        actionInterpolationSettings->setIconText(QCoreApplication::translate("MainWindow", "Interpolation settings", nullptr));
#if QT_CONFIG(tooltip)
        actionInterpolationSettings->setToolTip(QCoreApplication::translate("MainWindow", "Interpolation settings", nullptr));
#endif // QT_CONFIG(tooltip)
        actionSettingsParameters->setText(QCoreApplication::translate("MainWindow", "Parameters", nullptr));
        actionTopographicDistanceMapsSave->setText(QCoreApplication::translate("MainWindow", "Write", nullptr));
        actionTopographicDistanceMapsLoad->setText(QCoreApplication::translate("MainWindow", "Load", nullptr));
        actionAnomaly->setText(QCoreApplication::translate("MainWindow", "Compute anomaly...", nullptr));
        actionClimate->setText(QCoreApplication::translate("MainWindow", "Compute climate", nullptr));
        actionShowPointsHide->setText(QCoreApplication::translate("MainWindow", "Hide", nullptr));
        actionShowPointsCurrent->setText(QCoreApplication::translate("MainWindow", "Current variable", nullptr));
        actionShowPointsElab->setText(QCoreApplication::translate("MainWindow", "Elaboration", nullptr));
        actionShowPointsAnomalyAbs->setText(QCoreApplication::translate("MainWindow", "Absolute", nullptr));
        actionShowPointsAnomalyPerc->setText(QCoreApplication::translate("MainWindow", "Percentage", nullptr));
        actionShowPointsClimate->setText(QCoreApplication::translate("MainWindow", "Climate", nullptr));
        actionShowGridHide->setText(QCoreApplication::translate("MainWindow", "Hide", nullptr));
        actionShowGridLocation->setText(QCoreApplication::translate("MainWindow", "Location", nullptr));
        actionShowGridCurrent->setText(QCoreApplication::translate("MainWindow", "Current variable", nullptr));
        actionShowGridElab->setText(QCoreApplication::translate("MainWindow", "Elaboration", nullptr));
        actionShowGridAnomalyAbs->setText(QCoreApplication::translate("MainWindow", "Absolute", nullptr));
        actionShowGridAnomalyPerc->setText(QCoreApplication::translate("MainWindow", "Percentage", nullptr));
        actionShowGridClimate->setText(QCoreApplication::translate("MainWindow", "Climate", nullptr));
        actionShowPointsLocation->setText(QCoreApplication::translate("MainWindow", "Location", nullptr));
        actionFileOpenProject->setText(QCoreApplication::translate("MainWindow", "Open...", nullptr));
        actionFileCloseProject->setText(QCoreApplication::translate("MainWindow", "Close", nullptr));
        actionFileSaveProjectAs->setText(QCoreApplication::translate("MainWindow", "New...", nullptr));
        actionFileSaveProject->setText(QCoreApplication::translate("MainWindow", "Save", nullptr));
        actionRadiationSettings->setText(QCoreApplication::translate("MainWindow", "Settings...", nullptr));
        actionInterpolationMeteogridCurrentTime->setText(QCoreApplication::translate("MainWindow", "Current time", nullptr));
        actionInterpolationMeteogridPeriod->setText(QCoreApplication::translate("MainWindow", "Interpolate and save period...", nullptr));
        actionInterpolationMeteogridSaveCurrentData->setText(QCoreApplication::translate("MainWindow", "Save current data", nullptr));
        actionFileNetCDF_Open->setText(QCoreApplication::translate("MainWindow", "Open...", nullptr));
        actionNetCDF_Close->setText(QCoreApplication::translate("MainWindow", "Close", nullptr));
        actionNetCDF_ShowMetadata->setText(QCoreApplication::translate("MainWindow", "Show metadata...", nullptr));
        actionFileMeteogridOpen->setText(QCoreApplication::translate("MainWindow", "Open...", nullptr));
        actionFileMeteogridClose->setText(QCoreApplication::translate("MainWindow", "Close", nullptr));
        actionFileMeteogridExportNetcdf->setText(QCoreApplication::translate("MainWindow", "to NetCDF...", nullptr));
        actionFileMeteopointOpen->setText(QCoreApplication::translate("MainWindow", "Open...", nullptr));
        actionFileMeteopointClose->setText(QCoreApplication::translate("MainWindow", "Close", nullptr));
        actionFileMeteopointArkimetDownload->setText(QCoreApplication::translate("MainWindow", "Download...", nullptr));
        actionFileMeteopointNewArkimet->setText(QCoreApplication::translate("MainWindow", "From Arkimet...", nullptr));
        actionSettingsMapGoogleMap->setText(QCoreApplication::translate("MainWindow", "Google map", nullptr));
        actionSettingsMapGoogleSatellite->setText(QCoreApplication::translate("MainWindow", "Google satellite", nullptr));
        actionSettingsMapGoogleTerrain->setText(QCoreApplication::translate("MainWindow", "Google terrain", nullptr));
        actionSettingsMapGoogleHybrid->setText(QCoreApplication::translate("MainWindow", "Google hybrid satellite", nullptr));
        actionMeteopointDataCount->setText(QCoreApplication::translate("MainWindow", "Data count...", nullptr));
        actionMeteogridMissingData->setText(QCoreApplication::translate("MainWindow", "Find missing data...", nullptr));
        actionImport_data_XML_grid->setText(QCoreApplication::translate("MainWindow", "Import data with XML...", nullptr));
        actionFileMeteopointNewCsv->setText(QCoreApplication::translate("MainWindow", "From CSV...", nullptr));
        actionFileMeteopointProperties_import->setText(QCoreApplication::translate("MainWindow", "Import properties...", nullptr));
        actionFileMeteopointData_XMLimport->setText(QCoreApplication::translate("MainWindow", "Import data with XML...", nullptr));
        actionAll_active->setText(QCoreApplication::translate("MainWindow", "All", nullptr));
        actionSelected_active->setText(QCoreApplication::translate("MainWindow", "Selected", nullptr));
        actionFrom_point_list_active->setText(QCoreApplication::translate("MainWindow", "From point list", nullptr));
        actionWith_Criteria_active->setText(QCoreApplication::translate("MainWindow", "With Criteria...", nullptr));
        actionRandom_subset_active->setText(QCoreApplication::translate("MainWindow", "Random subset", nullptr));
        actionAll_notActive->setText(QCoreApplication::translate("MainWindow", "All", nullptr));
        actionSelected_notActive->setText(QCoreApplication::translate("MainWindow", "Selected", nullptr));
        actionWith_NO_DATA_notActive->setText(QCoreApplication::translate("MainWindow", "With NO DATA", nullptr));
        actionWith_Criteria_notActive->setText(QCoreApplication::translate("MainWindow", "With Criteria...", nullptr));
        actionDeletePoint_selected->setText(QCoreApplication::translate("MainWindow", "Selected", nullptr));
        actionDeletePoint_notSelected->setText(QCoreApplication::translate("MainWindow", "Not selected", nullptr));
        actionDeletePoint_notActive->setText(QCoreApplication::translate("MainWindow", "Not active", nullptr));
        actionDeleteData_Active->setText(QCoreApplication::translate("MainWindow", "Active", nullptr));
        actionDeleteData_notActive->setText(QCoreApplication::translate("MainWindow", "Not active", nullptr));
        actionDeleteData_selected->setText(QCoreApplication::translate("MainWindow", "Selected", nullptr));
        actionView_not_active_points->setText(QCoreApplication::translate("MainWindow", "View not active points", nullptr));
        action_Proxy_graph->setText(QCoreApplication::translate("MainWindow", "Proxy graph...", nullptr));
        actionNewMeteoGrid->setText(QCoreApplication::translate("MainWindow", "New...", nullptr));
        actionFileMeteogridExportRaster->setText(QCoreApplication::translate("MainWindow", "to Raster...", nullptr));
        actionFileMeteopointArkimetUpdatePointProperties->setText(QCoreApplication::translate("MainWindow", "Update properties...", nullptr));
        actionFileMeteopointArkimetUpdateMeteopoints->setText(QCoreApplication::translate("MainWindow", "Update meteo points...", nullptr));
        actionFileMeteopointArkimetUpdateDatasets->setText(QCoreApplication::translate("MainWindow", "Update datasets...", nullptr));
        actionPointStyleCircle->setText(QCoreApplication::translate("MainWindow", "Circle", nullptr));
        actionPointStyleText->setText(QCoreApplication::translate("MainWindow", "Text", nullptr));
        actionPointStyleText_multicolor->setText(QCoreApplication::translate("MainWindow", "Text multicolor", nullptr));
        actionMark_from_pointlist->setText(QCoreApplication::translate("MainWindow", "From point list", nullptr));
        actionUnmark_all_points->setText(QCoreApplication::translate("MainWindow", "Unmark all", nullptr));
        actionSpatialAggregationOpenDB->setText(QCoreApplication::translate("MainWindow", "Open aggregation DB...", nullptr));
        actionSpatialAggregationNewDB->setText(QCoreApplication::translate("MainWindow", "New aggregation DB...", nullptr));
        actionSpatialAggregationFromGrid->setText(QCoreApplication::translate("MainWindow", "Aggregate from grid (daily)...", nullptr));
        actionExport_MeteoPoints_toCsv->setText(QCoreApplication::translate("MainWindow", "Export current data to CSV...", nullptr));
        actionFileDemOpen->setText(QCoreApplication::translate("MainWindow", "Open...", nullptr));
#if QT_CONFIG(tooltip)
        actionFileDemOpen->setToolTip(QCoreApplication::translate("MainWindow", "Open DEM", nullptr));
#endif // QT_CONFIG(tooltip)
        actionFileExportInterpolation->setText(QCoreApplication::translate("MainWindow", "Export interpolation...", nullptr));
        flagMeteoGrid_Fixed_color_scale->setText(QCoreApplication::translate("MainWindow", "Fixed...", nullptr));
        flagMeteoGrid_Dynamic_color_scale->setText(QCoreApplication::translate("MainWindow", "Dynamic", nullptr));
        actionFileMeteogridDelete->setText(QCoreApplication::translate("MainWindow", "Delete", nullptr));
        actionMeteoGrid_Reverse_color_scale->setText(QCoreApplication::translate("MainWindow", "Reverse", nullptr));
        actioFileMeteogrid_Load_current_data->setText(QCoreApplication::translate("MainWindow", "Load current data", nullptr));
        actionMeteoGrid_Set_color_scale->setText(QCoreApplication::translate("MainWindow", "Set type...", nullptr));
        actionShiftDataAll->setText(QCoreApplication::translate("MainWindow", "All", nullptr));
        actionShiftDataSelected->setText(QCoreApplication::translate("MainWindow", "Selected", nullptr));
        actionMeteoGridActiveAll->setText(QCoreApplication::translate("MainWindow", "All", nullptr));
        actionMeteoGridActiveWith_DEM->setText(QCoreApplication::translate("MainWindow", "With DEM", nullptr));
        actionFileMeteogridPlanGriddingPeriod->setText(QCoreApplication::translate("MainWindow", "Plan gridding period...", nullptr));
        actionInterpolationMeteogridGriddingTaskAdd->setText(QCoreApplication::translate("MainWindow", "Add...", nullptr));
        actionInterpolationMeteogridGriddingTaskRemove->setText(QCoreApplication::translate("MainWindow", "Remove...", nullptr));
        actionDemRestore->setText(QCoreApplication::translate("MainWindow", "Restore DEM", nullptr));
        actionSearchPointName->setText(QCoreApplication::translate("MainWindow", "Name", nullptr));
#if QT_CONFIG(shortcut)
        actionSearchPointName->setShortcut(QCoreApplication::translate("MainWindow", "Ctrl+F", nullptr));
#endif // QT_CONFIG(shortcut)
        actionSearchPointId->setText(QCoreApplication::translate("MainWindow", "Id", nullptr));
        actionMeteoPointsClear_selection->setText(QCoreApplication::translate("MainWindow", "Clear selection", nullptr));
        actionShow_InfoProject->setText(QCoreApplication::translate("MainWindow", "Show Info...", nullptr));
        actionCompute_daily_from_Hourly_all->setText(QCoreApplication::translate("MainWindow", "All", nullptr));
#if QT_CONFIG(tooltip)
        actionCompute_daily_from_Hourly_all->setToolTip(QCoreApplication::translate("MainWindow", "Compute daily from Hourly All", nullptr));
#endif // QT_CONFIG(tooltip)
        actionCompute_daily_from_Hourly_selected->setText(QCoreApplication::translate("MainWindow", "Selected", nullptr));
#if QT_CONFIG(tooltip)
        actionCompute_daily_from_Hourly_selected->setToolTip(QCoreApplication::translate("MainWindow", "Compute daily from Hourly Selected", nullptr));
#endif // QT_CONFIG(tooltip)
        actionCompute_monthly_data_from_daily->setText(QCoreApplication::translate("MainWindow", "Compute monthly data from daily", nullptr));
        actionNetcdf_ColorScale_SetType->setText(QCoreApplication::translate("MainWindow", "Set type...", nullptr));
        actionNetcdf_ColorScale_Reverse->setText(QCoreApplication::translate("MainWindow", "Reverse", nullptr));
        actionNetcdf_ColorScale_Fixed->setText(QCoreApplication::translate("MainWindow", "Fixed...", nullptr));
        actionNetcdf_ColorScale_RangeVariable->setText(QCoreApplication::translate("MainWindow", "Variable", nullptr));
        actionShowNetcdfHide->setText(QCoreApplication::translate("MainWindow", "Hide", nullptr));
        actionShowNetcdfLocation->setText(QCoreApplication::translate("MainWindow", "Location", nullptr));
        actionShowNetcdfVariable->setText(QCoreApplication::translate("MainWindow", "Variable", nullptr));
        actionClimateMeteoPoints->setText(QCoreApplication::translate("MainWindow", "MeteoPoints", nullptr));
        actionClimateMeteoGrid->setText(QCoreApplication::translate("MainWindow", "MeteoGrid", nullptr));
        actionStatistical_Summary->setText(QCoreApplication::translate("MainWindow", "Statistical Summary", nullptr));
        actionStatistical_Summary->setIconText(QCoreApplication::translate("MainWindow", "Statistical Summary", nullptr));
        actionDemRangeFixed->setText(QCoreApplication::translate("MainWindow", "Fixed...", nullptr));
        actionDemRangeDynamic->setText(QCoreApplication::translate("MainWindow", "Dynamic", nullptr));
        actionExport_MeteoGrid_toCsv->setText(QCoreApplication::translate("MainWindow", "to Csv", nullptr));
        actionOpenShell->setText(QCoreApplication::translate("MainWindow", "Shell", nullptr));
        actionView_output_points->setText(QCoreApplication::translate("MainWindow", "View output points", nullptr));
        actionFileOutputPointsOpen->setText(QCoreApplication::translate("MainWindow", "Open...", nullptr));
        actionFileOutputPointsClose->setText(QCoreApplication::translate("MainWindow", "Close", nullptr));
        actionFileOutputPoints_NewFromCsv->setText(QCoreApplication::translate("MainWindow", "New (from csv)...", nullptr));
        actionInterpolationOutputPointsCurrentTime->setText(QCoreApplication::translate("MainWindow", "Current time", nullptr));
        actionInterpolationOutputPointsPeriod->setText(QCoreApplication::translate("MainWindow", "Interpolate and save period...", nullptr));
        actionCompute_drought->setText(QCoreApplication::translate("MainWindow", "Compute drought...", nullptr));
        actionFileMeteogrid_ExportDailyData->setText(QCoreApplication::translate("MainWindow", "Export daily data...", nullptr));
        actionFileMeteopointData_XMLexport->setText(QCoreApplication::translate("MainWindow", "Export data with XML", nullptr));
        actionFileMeteogridData_XMLexport->setText(QCoreApplication::translate("MainWindow", "Export data with XML", nullptr));
        actionWaterTable_importLocation->setText(QCoreApplication::translate("MainWindow", "Import wells location (csv)...", nullptr));
        actionWaterTable_importDepth->setText(QCoreApplication::translate("MainWindow", "Import observed depth (csv)...", nullptr));
        actionWaterTable_computeSingleWell->setText(QCoreApplication::translate("MainWindow", "Single well...", nullptr));
        actionWaterTable_computeAllWells->setText(QCoreApplication::translate("MainWindow", "All the wells", nullptr));
        actionWaterTable_showLocation->setText(QCoreApplication::translate("MainWindow", "Location", nullptr));
        actionWaterTable_showParameters->setText(QCoreApplication::translate("MainWindow", "Wells parameters...", nullptr));
        actionWaterTable_showDepth->setText(QCoreApplication::translate("MainWindow", "Water Table depth...", nullptr));
        actionWaterTable_Hide->setText(QCoreApplication::translate("MainWindow", "Hide", nullptr));
        actionWaterTable_showId->setText(QCoreApplication::translate("MainWindow", "Id", nullptr));
        actionSpatialAggregationAssignAltitude->setText(QCoreApplication::translate("MainWindow", "Assign altitude to aggregation points", nullptr));
        actionInterpolationTopographicIndex->setText(QCoreApplication::translate("MainWindow", "Topographic index...", nullptr));
        actionShowPointsCVResidual->setText(QCoreApplication::translate("MainWindow", "Cross validation residual", nullptr));
        actionInterpolationCVCurrentTime->setText(QCoreApplication::translate("MainWindow", "Current time", nullptr));
        actionInterpolationCVPeriod->setText(QCoreApplication::translate("MainWindow", "Period", nullptr));
        actionSpatialAggregationFromGrid_hourly->setText(QCoreApplication::translate("MainWindow", "Aggregate from grid (hourly)...", nullptr));
        actionInterpolationWriteGlocalWeightMaps->setText(QCoreApplication::translate("MainWindow", "Write glocal weight maps", nullptr));
        actionHide_supplemental_stations->setText(QCoreApplication::translate("MainWindow", "Hide supplemental stations", nullptr));
        actionFileLoadInterpolation->setText(QCoreApplication::translate("MainWindow", "Load interpolation...", nullptr));
        actionDemZoom_to_layer->setText(QCoreApplication::translate("MainWindow", "Zoom to layer", nullptr));
#if QT_CONFIG(shortcut)
        actionDemZoom_to_layer->setShortcut(QCoreApplication::translate("MainWindow", "Ctrl+Z", nullptr));
#endif // QT_CONFIG(shortcut)
        actionElaboration_Daily_data->setText(QCoreApplication::translate("MainWindow", "Daily data...", nullptr));
        actionElaboration_Hourly_data->setText(QCoreApplication::translate("MainWindow", "Hourly data...", nullptr));
        actionShowInfo->setText(QCoreApplication::translate("MainWindow", "Info...", nullptr));
        actionMark_macro_area_stations->setText(QCoreApplication::translate("MainWindow", "Mark macro area stations", nullptr));
        actionAll_Selected->setText(QCoreApplication::translate("MainWindow", "All", nullptr));
        actionNone_Selected->setText(QCoreApplication::translate("MainWindow", "None", nullptr));
        actionFrom_point_list_Selected->setText(QCoreApplication::translate("MainWindow", "From point list", nullptr));
        actionWith_Criteria_Selected->setText(QCoreApplication::translate("MainWindow", "With Criteria...", nullptr));
        actionFileMeteopointArkimetLoadVM->setText(QCoreApplication::translate("MainWindow", "Import daily data VM2...", nullptr));
        actionLoad_stations_file->setText(QCoreApplication::translate("MainWindow", "Load stations file", nullptr));
        actionLoad_macro_areas_file->setText(QCoreApplication::translate("MainWindow", "Load macro areas file", nullptr));
        actionInterpolationGlocalCreateWeightMaps->setText(QCoreApplication::translate("MainWindow", "Create weight maps...", nullptr));
        actionInterpolationGlocalSelectZoneMap->setText(QCoreApplication::translate("MainWindow", "Select zone map...", nullptr));
        actionInterpolationGlocalSelectStationLists->setText(QCoreApplication::translate("MainWindow", "Select stations list...", nullptr));
        labelVariable->setText(QCoreApplication::translate("MainWindow", "name", nullptr));
        labelFrequency->setText(QCoreApplication::translate("MainWindow", "frequency", nullptr));
        dateEdit->setDisplayFormat(QCoreApplication::translate("MainWindow", "yyyy-MM-dd", nullptr));
        frequencyButton->setText(QCoreApplication::translate("MainWindow", "Frequency", nullptr));
        variableButton->setText(QCoreApplication::translate("MainWindow", "Variable", nullptr));
        dayBeforeButton->setText(QCoreApplication::translate("MainWindow", "<", nullptr));
        dayAfterButton->setText(QCoreApplication::translate("MainWindow", ">", nullptr));
        groupBoxMeteoPoints->setTitle(QCoreApplication::translate("MainWindow", "Meteo Points", nullptr));
#if QT_CONFIG(tooltip)
        widgetColorLegendPoints->setToolTip(QCoreApplication::translate("MainWindow", "Variable colors", nullptr));
#endif // QT_CONFIG(tooltip)
        groupBoxMeteoGrid->setTitle(QCoreApplication::translate("MainWindow", "Meteo Grid", nullptr));
#if QT_CONFIG(tooltip)
        widgetColorLegendGrid->setToolTip(QCoreApplication::translate("MainWindow", "Variable colors", nullptr));
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        meteoGridOpacitySlider->setToolTip(QCoreApplication::translate("MainWindow", "Meteo Grid opacity", nullptr));
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(accessibility)
        meteoGridOpacitySlider->setAccessibleName(QString());
#endif // QT_CONFIG(accessibility)
#if QT_CONFIG(accessibility)
        meteoGridOpacitySlider->setAccessibleDescription(QString());
#endif // QT_CONFIG(accessibility)
        labelMeteoGridScale->setText(QString());
#if QT_CONFIG(tooltip)
        rasterOpacitySlider->setToolTip(QCoreApplication::translate("MainWindow", "Raster opacity", nullptr));
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(accessibility)
        rasterOpacitySlider->setAccessibleName(QString());
#endif // QT_CONFIG(accessibility)
#if QT_CONFIG(accessibility)
        rasterOpacitySlider->setAccessibleDescription(QString());
#endif // QT_CONFIG(accessibility)
#if QT_CONFIG(tooltip)
        widgetColorLegendRaster->setToolTip(QCoreApplication::translate("MainWindow", "Raster colors", nullptr));
#endif // QT_CONFIG(tooltip)
        labelRasterScale->setText(QCoreApplication::translate("MainWindow", "Digital Terrain Map [m]", nullptr));
        groupBoxNetcdf->setTitle(QCoreApplication::translate("MainWindow", "Netcdf", nullptr));
#if QT_CONFIG(tooltip)
        widgetColorLegendNetcdf->setToolTip(QCoreApplication::translate("MainWindow", "Variable colors", nullptr));
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        netcdfOpacitySlider->setToolTip(QCoreApplication::translate("MainWindow", "Meteo Grid opacity", nullptr));
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(accessibility)
        netcdfOpacitySlider->setAccessibleName(QString());
#endif // QT_CONFIG(accessibility)
#if QT_CONFIG(accessibility)
        netcdfOpacitySlider->setAccessibleDescription(QString());
#endif // QT_CONFIG(accessibility)
        netCDFButtonVariable->setText(QCoreApplication::translate("MainWindow", "Variable", nullptr));
        labelNetcdfVariable->setText(QString());
        groupBoxCV->setTitle(QCoreApplication::translate("MainWindow", "Cross validation", nullptr));
        groupBoxElaboration->setTitle(QCoreApplication::translate("MainWindow", "Elaboration", nullptr));
        label_elab1->setText(QCoreApplication::translate("MainWindow", "elab 1:", nullptr));
        label_elab2->setText(QCoreApplication::translate("MainWindow", "elab 2:", nullptr));
        label_variable->setText(QCoreApplication::translate("MainWindow", "variable:", nullptr));
        label_period->setText(QCoreApplication::translate("MainWindow", "period:", nullptr));
        label_offset->setText(QCoreApplication::translate("MainWindow", "offset:", nullptr));
        menuFile->setTitle(QCoreApplication::translate("MainWindow", "Fi&le", nullptr));
        menuFileNetCDF->setTitle(QCoreApplication::translate("MainWindow", "NetCDF grid", nullptr));
        menuColor_Scale->setTitle(QCoreApplication::translate("MainWindow", "Color Scale", nullptr));
        menuNetcdf_ColorScale_Range->setTitle(QCoreApplication::translate("MainWindow", "Range", nullptr));
        menuMeteogrid->setTitle(QCoreApplication::translate("MainWindow", "Meteo grid", nullptr));
        menuExport->setTitle(QCoreApplication::translate("MainWindow", "Export current data", nullptr));
        menuFileMeteopoint->setTitle(QCoreApplication::translate("MainWindow", "Meteo points", nullptr));
        menuFileMeteopointNew->setTitle(QCoreApplication::translate("MainWindow", "New", nullptr));
        menuImport->setTitle(QCoreApplication::translate("MainWindow", "CSV data", nullptr));
        menuArkimet->setTitle(QCoreApplication::translate("MainWindow", "Arkimet data", nullptr));
        menuOpen_DEM->setTitle(QCoreApplication::translate("MainWindow", "DEM", nullptr));
        menuSet_range->setTitle(QCoreApplication::translate("MainWindow", "Set range", nullptr));
        menuProject->setTitle(QCoreApplication::translate("MainWindow", "Project", nullptr));
        menuFileOutputPoints->setTitle(QCoreApplication::translate("MainWindow", "Output points", nullptr));
        menuMacro_areas_file->setTitle(QCoreApplication::translate("MainWindow", "Macro areas file", nullptr));
        menuMeteopoint->setTitle(QCoreApplication::translate("MainWindow", "MeteoPoints", nullptr));
        menuActive_points->setTitle(QCoreApplication::translate("MainWindow", "Activate points", nullptr));
        menuDeactive_points->setTitle(QCoreApplication::translate("MainWindow", "Deactivate points", nullptr));
        menuDelete_data->setTitle(QCoreApplication::translate("MainWindow", "Delete data", nullptr));
        menuDelete_points->setTitle(QCoreApplication::translate("MainWindow", "Delete points", nullptr));
        menuMark_points->setTitle(QCoreApplication::translate("MainWindow", "Mark points", nullptr));
        menuShift_data->setTitle(QCoreApplication::translate("MainWindow", "Shift data", nullptr));
        menuSearch_points->setTitle(QCoreApplication::translate("MainWindow", "Search points", nullptr));
        menuCompute_daily_data_from_hourly->setTitle(QCoreApplication::translate("MainWindow", "Compute daily data from hourly", nullptr));
        menuSelected_points->setTitle(QCoreApplication::translate("MainWindow", "Select points", nullptr));
        menuSettings->setTitle(QCoreApplication::translate("MainWindow", "Settin&gs", nullptr));
        menuSettingsMap->setTitle(QCoreApplication::translate("MainWindow", "&Map", nullptr));
        menuInterpolation->setTitle(QCoreApplication::translate("MainWindow", "Interpolation", nullptr));
        menuTopographicDistanceMaps->setTitle(QCoreApplication::translate("MainWindow", "Topographic distance maps", nullptr));
        menuInterpolationMeteogrid->setTitle(QCoreApplication::translate("MainWindow", "Interpolation to meteo grid", nullptr));
        menuInterpolationMeteogridGriddingTask->setTitle(QCoreApplication::translate("MainWindow", "Gridding task", nullptr));
        menuInterpolation_to_output_points->setTitle(QCoreApplication::translate("MainWindow", "Interpolation to output points", nullptr));
        menuInterpolationCV->setTitle(QCoreApplication::translate("MainWindow", "Cross validation", nullptr));
        menuGlocal->setTitle(QCoreApplication::translate("MainWindow", "Glocal", nullptr));
        menuElaboration->setTitle(QCoreApplication::translate("MainWindow", "Elaboration", nullptr));
        menuElaborationElab->setTitle(QCoreApplication::translate("MainWindow", "Elaboration", nullptr));
        menuCompute_elaboration->setTitle(QCoreApplication::translate("MainWindow", "Compute elaboration", nullptr));
        menuClimate->setTitle(QCoreApplication::translate("MainWindow", "Climate", nullptr));
        menuClimate_fields->setTitle(QCoreApplication::translate("MainWindow", "Climate fields", nullptr));
        menuSpatialAggregation->setTitle(QCoreApplication::translate("MainWindow", "Spatial aggregation", nullptr));
        menuShow->setTitle(QCoreApplication::translate("MainWindow", "Show", nullptr));
        menuShowPoints->setTitle(QCoreApplication::translate("MainWindow", "Points", nullptr));
        menuShowPointsAnomaly->setTitle(QCoreApplication::translate("MainWindow", "Anomaly", nullptr));
        menustyle->setTitle(QCoreApplication::translate("MainWindow", "style", nullptr));
        menuShowGrid->setTitle(QCoreApplication::translate("MainWindow", "Grid", nullptr));
        menuShowGridAnomaly->setTitle(QCoreApplication::translate("MainWindow", "Anomaly", nullptr));
        menuNetCDF->setTitle(QCoreApplication::translate("MainWindow", "NetCDF", nullptr));
        menuRadiation->setTitle(QCoreApplication::translate("MainWindow", "Radiation", nullptr));
        menuMeteoGrid->setTitle(QCoreApplication::translate("MainWindow", "MeteoGrid", nullptr));
        menuColor_scale->setTitle(QCoreApplication::translate("MainWindow", "Color scale", nullptr));
        menuRange->setTitle(QCoreApplication::translate("MainWindow", "Range", nullptr));
        menuActive_cells->setTitle(QCoreApplication::translate("MainWindow", "Active cells", nullptr));
        menuWaterTable->setTitle(QCoreApplication::translate("MainWindow", "WaterTable", nullptr));
        menuWaterTableData->setTitle(QCoreApplication::translate("MainWindow", "Data", nullptr));
        menuWaterTableCompute->setTitle(QCoreApplication::translate("MainWindow", "Compute parameters", nullptr));
        menuWaterTableShow->setTitle(QCoreApplication::translate("MainWindow", "Show", nullptr));
    } // retranslateUi

};

namespace Ui {
    class MainWindow: public Ui_MainWindow {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_MAINWINDOW_H
